datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  fullName String?
  phone String?
  addressLine1 String?
  addressLine2 String?
  city String?
  state String?
  zip String?
  country String?
  website String?
  linkedin String?
  github String?
  twitter String?
  bio String?
  pronouns String?
  avatar String?
  resume String?
  dateOfBirth DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  degrees  Degree[]
  roles    UserRole[]
}

model UserRole {
  id    String @id @default(cuid())
  role String @default("solver")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Degree {
  id    String @id @default(cuid())
  level String
  field  String
  school  String
  country  String
  start  DateTime
  end  DateTime
  ongoing Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  accomplishments Accomplishment[]
}

model Accomplishment {
  id    String @id @default(cuid())
  name String
  certificate  String
  title String
  link String
  organization String
  identifier String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  degree   Degree   @relation(fields: [degreeId], references: [id])
  degreeId String
}
