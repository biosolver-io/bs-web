{
  "version": 3,
  "sources": ["empty-module:~/models/userRole.server", "../../../app/routes/register.tsx"],
  "sourcesContent": ["module.exports = {};", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { create } from \"domain\";\nimport { useEffect, useRef } from \"react\";\nimport { FaGoogle, FaLinkedin } from \"react-icons/fa\";\nimport logoPng from \"~/assets/images/logos/base.png\";\n\nimport { createUser, getUserByEmail, updateUserById } from \"~/models/user.server\";\nimport { createRoles } from \"~/models/userRole.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/dashboard\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  console.log(formData)\n  const fullName = formData.get(\"fullName\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const roles = formData.getAll(\"roles\");\n  const referralCode = formData.get(\"referralCode\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/dashboard\");\n\n  console.log(email, password, roles)\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(fullName as string, email, password);\n  if (referralCode && typeof referralCode === 'string') {\n    await updateUserById(user.id, { source: referralCode, sourceType: 'referral' })\n  }\n  await createRoles(user.id, roles.map((role) => role.toString()));\n\n  return createUserSession({\n    redirectTo,\n    remember: false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Register() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const fullNameRef = useRef<HTMLInputElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const referralCodeRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <>\n      <div className=\"flex min-h-full flex-1 justify-center\">\n        <div className=\"flex flex-1 flex-col justify-center px-4 py-12 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n          <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n            <div className='w-full items-center text-center'>\n              <Link to=\"/\" className=\"items-center\" >\n                <img className=\"h-16 w-16 mx-auto\" src={logoPng} alt=\"BioSolver Logo\" />\n              </Link>\n              <h2 className=\"mt-8 text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n                Create your account\n              </h2>\n              <p className=\"mt-2 text-sm leading-6 text-gray-500\">\n                Already a member?{' '}\n                <Link to=\"/login\" className=\"font-semibold text-purple-600 hover:text-purple-500\">\n                  Sign In\n                </Link>\n              </p>\n            </div>\n\n            <div className=\"mt-10\">\n              <div>\n                <Form method=\"post\" className=\"space-y-6\">\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Full Name\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={fullNameRef}\n                        id=\"fullName\"\n                        required\n                        autoFocus={true}\n                        name=\"fullName\"\n                        type=\"text\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n\n                    </div>\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Email address\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={emailRef}\n                        id=\"email\"\n                        required\n                        autoFocus={true}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        aria-invalid={actionData?.errors?.email ? true : undefined}\n                        aria-describedby=\"email-error\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                      {actionData?.errors?.email ? (\n                        <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                          {actionData.errors.email}\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n\n                  <div>\n                    <label\n                      htmlFor=\"password\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Password\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        id=\"password\"\n                        ref={passwordRef}\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"new-password\"\n                        aria-invalid={actionData?.errors?.password ? true : undefined}\n                        aria-describedby=\"password-error\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                      {actionData?.errors?.password ? (\n                        <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                          {actionData.errors.password}\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n\n                  <fieldset>\n                    <legend>Roles</legend>\n                    <div className=\"space-y-5\">\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-solver\"\n                            aria-describedby=\"role-solver-description\"\n                            name=\"roles\"\n                            value=\"solver\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-solver\" className=\"font-medium text-gray-900\">\n                            Solver\n                          </label>\n                          <p id=\"role-solver-description\" className=\"text-gray-500\">\n                            I am an expert/student looking for work.\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-seeker\"\n                            aria-describedby=\"role-seeker-description\"\n                            name=\"roles\"\n                            value=\"seeker\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-seeker\" className=\"font-medium text-gray-900\">\n                            Seeker\n                          </label>\n                          <p id=\"role-seeker-description\" className=\"text-gray-500\">\n                            I am looking to hire a Freelancer.\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-referrer\"\n                            aria-describedby=\"role-referrer-description\"\n                            name=\"roles\"\n                            value=\"referrer\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-referrer\" className=\"font-medium text-gray-900\">\n                            Referral Partner\n                          </label>\n                          <p id=\"role-referrer-description\" className=\"text-gray-500\">\n                            I can spread the word.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n\n                  <div>\n                    <label\n                      htmlFor=\"referralCode\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Referral Code (optional)\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={referralCodeRef}\n                        id=\"referralCode\"\n                        autoFocus={true}\n                        name=\"referralCode\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                    </div>\n                  </div>\n\n                  <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n                  <button\n                    type=\"submit\"\n                    className=\"w-full rounded bg-purple-500 px-4 py-2 text-white hover:bg-purple-600 focus:bg-purple-400\"\n                  >\n                    Create Account\n                  </button>\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"text-center text-sm text-gray-500\">\n                      Already have an account?{\" \"}\n                      <Link\n                        className=\"text-purple-500 underline\"\n                        to={{\n                          pathname: \"/login\",\n                          search: searchParams.toString(),\n                        }}\n                      >\n                        Log in\n                      </Link>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n\n              {/* <div className=\"mt-10\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n                    <div className=\"w-full border-t border-gray-200\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-sm font-medium leading-6\">\n                    <span className=\"bg-white px-6 text-gray-900\">Or continue with</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 grid grid-cols-2 gap-4\">\n                  <a\n                    href=\"#\"\n                    className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-1.5 text-black bordered border-2 border-black\"\n                  >\n                    <FaGoogle className=\"h-5 w-5\" />\n                    <span className=\"text-sm font-semibold leading-6\">Google</span>\n                  </a>\n\n                  <a\n                    href=\"#\"\n                    className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-1.5 text-black bordered border-2 border-black\"\n                  >\n                    <FaLinkedin className=\"h-5 w-5\" />\n                    <span className=\"text-sm font-semibold leading-6\">LinkedIn</span>\n                  </a>\n                </div>\n              </div> */}\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n"],
  "mappings": "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",
  "names": ["import_react", "_a", "_b", "_c", "_d"]
}
