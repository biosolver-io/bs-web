{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:D:\\spaces\\BioSolver\\code\\bs-web\\node_modules\\@remix-run\\css-bundle\\dist\\index.js", "../app/routes/profile.education.degree.new.tsx", "../app/routes/seeker.dashboard.tsx", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/layout/anon/Header.tsx", "../app/layout/anon/Footer.tsx", "server-entry-module:@remix-run/dev/server-build", "../app/routes/profile.degrees.$degreeId.tsx", "../app/routes/profile.education.back.tsx", "../app/assets/data/countries.ts", "../app/components/AccomplishmentCard.tsx", "../app/components/DegreeCard.tsx", "../app/routes/profile.professional.tsx", "../app/assets/data/assessmentFormats.ts", "../app/assets/data/months.ts", "../app/assets/data/years.ts", "../app/assets/data/yesNos.ts", "../app/components/AccomplishmentForm.tsx", "../app/components/LabelledDropdown.tsx", "../app/components/LabelledInput.tsx", "../app/routes/terms-and-conditions.tsx", "../app/routes/profile.education.tsx", "../app/form-action.server.ts", "../app/form.ts", "../app/routes/profile.personal.tsx", "../app/modules/profile/Personal.tsx", "../app/routes/profile.degrees.tsx", "../app/routes/privacy-policy.tsx", "../app/routes/profile.single.tsx", "../app/models/note.server.ts", "../app/routes/profile.skills.tsx", "../app/modules/profile/Skills.tsx", "../app/routes/profile._index.tsx", "../app/routes/notes.$noteId.tsx", "../app/routes/notes._index.tsx", "../app/routes/profile.work.tsx", "../app/components/MultiSelect.tsx", "../app/components/SingleSelect.tsx", "../app/routes/for-seekers.tsx", "../app/utils.ts", "../app/layout/anon/ListHighlight.tsx", "../app/layout/anon/SimpleHighlight.tsx", "../app/layout/anon/common/FieldGroup.tsx", "../app/layout/anon/common/FieldsSection.tsx", "../app/layout/anon/common/ServicesSection.tsx", "../app/layout/anon/seeker/HeroSection.tsx", "../app/routes/for-solvers.tsx", "../app/layout/anon/solver/HeroSection.tsx", "../app/routes/healthcheck.tsx", "../app/routes/contact-us.tsx", "../app/routes/dashboard.tsx", "../app/routes/documents.tsx", "../app/routes/notes.new.tsx", "../app/routes/calendar.tsx", "../app/routes/messages.tsx", "../app/routes/register.tsx", "../app/models/userRole.server.ts", "../app/routes/matches.tsx", "../app/routes/profile.tsx", "../app/models/degree.server.ts", "../app/routes/reports.tsx", "../app/routes/logout.tsx", "../app/routes/_index.tsx", "../app/layout/anon/GridTile.tsx", "../app/layout/anon/home/CategorySection.tsx", "../app/layout/anon/home/HeroSection.tsx", "../app/layout/anon/home/HeroDecoration.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v1.17.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "", "", "export * from \"@remix-run/dev/server-build\";", "/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { EntryContext } from \"@remix-run/node\";\r\nimport { Response } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          console.error(error);\r\n          responseStatusCode = 500;\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Form,\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\n\nimport { getUser } from \"~/session.server\";\nimport stylesheet from \"~/tailwind.css\";\nimport Navbar from \"./layout/Navbar\";\nimport { useOptionalUser } from \"./utils\";\nimport Header from \"./layout/anon/Header\";\nimport Footer from \"./layout/anon/Footer\";\nimport { Transition, Dialog, Menu } from \"@headlessui/react\";\nimport { XMarkIcon, Cog6ToothIcon, Bars3Icon, MagnifyingGlassIcon, BellIcon, ChevronDownIcon, CalendarIcon, ChartPieIcon, DocumentDuplicateIcon, FolderIcon, HomeIcon, UsersIcon } from \"@heroicons/react/24/outline\";\nimport { useState, Fragment } from \"react\";\n\nimport userPng from '~/assets/images/user/User_128px.png';\nimport logoPng from '~/assets/images/logos/base.png';\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : [])];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json({ user: await getUser(request) });\n};\n\nconst navigation = [\n{ name: 'Dashboard', href: '/dashboard', icon: HomeIcon, current: true },\n{ name: 'Your Matches', href: '/matches', icon: UsersIcon, current: false },\n{ name: 'Messages', href: '/messages', icon: FolderIcon, current: false },\n{ name: 'Calendar', href: '/calendar', icon: CalendarIcon, current: false },\n{ name: 'Documents', href: '/documents', icon: DocumentDuplicateIcon, current: false },\n{ name: 'Reports', href: '/reports', icon: ChartPieIcon, current: false }];\n\nconst teams = [\n{ id: 1, name: 'Heroicons', href: '#', initial: 'H', current: false },\n{ id: 2, name: 'Tailwind Labs', href: '#', initial: 'T', current: false },\n{ id: 3, name: 'Workcation', href: '#', initial: 'W', current: false }];\n\nconst userNavigation = [\n{ name: 'Your profile', href: 'profile' },\n{ name: 'Sign out', href: '#' }];\n\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport default function App() {\n  const { user } = useLoaderData();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"w-full h-full font-display\">\n        {\n        user ? <div>\n            <div className=\"w-full h-auto mx-auto\">\n              <div>\n                <Transition.Root show={sidebarOpen} as={Fragment}>\n                  <Dialog as=\"div\" className=\"relative z-50 lg:hidden\" onClose={setSidebarOpen}>\n                    <Transition.Child\n                    as={Fragment}\n                    enter=\"transition-opacity ease-linear duration-300\"\n                    enterFrom=\"opacity-0\"\n                    enterTo=\"opacity-100\"\n                    leave=\"transition-opacity ease-linear duration-300\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\">\n\n                      <div className=\"fixed inset-0 bg-gray-900/80\" />\n                    </Transition.Child>\n\n                    <div className=\"fixed inset-0 flex\">\n                      <Transition.Child\n                      as={Fragment}\n                      enter=\"transition ease-in-out duration-300 transform\"\n                      enterFrom=\"-translate-x-full\"\n                      enterTo=\"translate-x-0\"\n                      leave=\"transition ease-in-out duration-300 transform\"\n                      leaveFrom=\"translate-x-0\"\n                      leaveTo=\"-translate-x-full\">\n\n                        <Dialog.Panel className=\"relative mr-16 flex w-full max-w-xs flex-1\">\n                          <Transition.Child\n                          as={Fragment}\n                          enter=\"ease-in-out duration-300\"\n                          enterFrom=\"opacity-0\"\n                          enterTo=\"opacity-100\"\n                          leave=\"ease-in-out duration-300\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\">\n\n                            <div className=\"absolute left-full top-0 flex w-16 justify-center pt-5\">\n                              <button type=\"button\" className=\"-m-2.5 p-2.5\" onClick={() => setSidebarOpen(false)}>\n                                <span className=\"sr-only\">Close sidebar</span>\n                                <XMarkIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                              </button>\n                            </div>\n                          </Transition.Child>\n                          {/* Sidebar component, swap this element with another sidebar if you like */}\n                          <div className=\"flex grow flex-col gap-y-5 overflow-y-auto bg-white px-6 pb-4\">\n                            <div className=\"flex h-16 shrink-0 items-center\">\n                              <img\n                              className=\"h-8 w-auto\"\n                              src={logoPng}\n                              alt=\"Biosolver\" />\n\n                            </div>\n                            <nav className=\"flex flex-1 flex-col\">\n                              <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n                                <li>\n                                  <ul role=\"list\" className=\"-mx-2 space-y-1\">\n                                    {navigation.map((item) =>\n                                  <li key={item.name}>\n                                        <Link to={item.href} className={classNames(\n                                      item.current ?\n                                      'bg-gray-50 text-indigo-600' :\n                                      'text-gray-700 hover:text-indigo-600 hover:bg-gray-50',\n                                      'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                                    )}>\n                                          <item.icon\n                                        className={classNames(\n                                          item.current ? 'text-indigo-600' : 'text-gray-400 group-hover:text-indigo-600',\n                                          'h-6 w-6 shrink-0'\n                                        )}\n                                        aria-hidden=\"true\" />\n\n                                          {item.name}\n                                        </Link>\n                                      </li>\n                                  )}\n                                  </ul>\n                                </li>\n                                {/* <li>\n                                 <div className=\"text-xs font-semibold leading-6 text-gray-400\">Your teams</div>\n                                 <ul role=\"list\" className=\"-mx-2 mt-2 space-y-1\">\n                                   {teams.map((team) => (\n                                     <li key={team.name}>\n                                       <a\n                                         href={team.href}\n                                         className={classNames(\n                                           team.current\n                                             ? 'bg-gray-50 text-indigo-600'\n                                             : 'text-gray-700 hover:text-indigo-600 hover:bg-gray-50',\n                                           'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                                         )}\n                                       >\n                                         <span\n                                           className={classNames(\n                                             team.current\n                                               ? 'text-indigo-600 border-indigo-600'\n                                               : 'text-gray-400 border-gray-200 group-hover:border-indigo-600 group-hover:text-indigo-600',\n                                             'flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-white'\n                                           )}\n                                         >\n                                           {team.initial}\n                                         </span>\n                                         <span className=\"truncate\">{team.name}</span>\n                                       </a>\n                                     </li>\n                                   ))}\n                                 </ul>\n                                </li> */}\n                                <li className=\"mt-auto\">\n                                  <a\n                                  href=\"#\"\n                                  className=\"group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-700 hover:bg-gray-50 hover:text-indigo-600\">\n\n                                    <Cog6ToothIcon\n                                    className=\"h-6 w-6 shrink-0 text-gray-400 group-hover:text-indigo-600\"\n                                    aria-hidden=\"true\" />\n\n                                    Settings\n                                  </a>\n                                </li>\n                              </ul>\n                            </nav>\n                          </div>\n                        </Dialog.Panel>\n                      </Transition.Child>\n                    </div>\n                  </Dialog>\n                </Transition.Root>\n\n                {/* Static sidebar for desktop */}\n                <div className=\"hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col\">\n                  {/* Sidebar component, swap this element with another sidebar if you like */}\n                  <div className=\"flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-6 pb-4\">\n                    <div className=\"flex h-16 shrink-0 items-center\">\n                      <img\n                      className=\"h-8 w-auto\"\n                      src={logoPng}\n                      alt=\"Biosolver\" />\n\n                    </div>\n                    <nav className=\"flex flex-1 flex-col\">\n                      <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n                        <li>\n                          <ul role=\"list\" className=\"-mx-2 space-y-1\">\n                            {navigation.map((item) =>\n                          <li key={item.name}>\n                                <Link to={item.href} className={classNames(\n                              item.current ?\n                              'bg-gray-50 text-indigo-600' :\n                              'text-gray-700 hover:text-indigo-600 hover:bg-gray-50',\n                              'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                            )}>\n                                  <item.icon\n                                className={classNames(\n                                  item.current ? 'text-indigo-600' : 'text-gray-400 group-hover:text-indigo-600',\n                                  'h-6 w-6 shrink-0'\n                                )}\n                                aria-hidden=\"true\" />\n\n                                  {item.name}\n                                </Link>\n                              </li>\n                          )}\n                          </ul>\n                        </li>\n                        {/* <li>\n                         <div className=\"text-xs font-semibold leading-6 text-gray-400\">Your teams</div>\n                         <ul role=\"list\" className=\"-mx-2 mt-2 space-y-1\">\n                           {teams.map((team) => (\n                             <li key={team.name}>\n                               <a\n                                 href={team.href}\n                                 className={classNames(\n                                   team.current\n                                     ? 'bg-gray-50 text-indigo-600'\n                                     : 'text-gray-700 hover:text-indigo-600 hover:bg-gray-50',\n                                   'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'\n                                 )}\n                               >\n                                 <span\n                                   className={classNames(\n                                     team.current\n                                       ? 'text-indigo-600 border-indigo-600'\n                                       : 'text-gray-400 border-gray-200 group-hover:border-indigo-600 group-hover:text-indigo-600',\n                                     'flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-white'\n                                   )}\n                                 >\n                                   {team.initial}\n                                 </span>\n                                 <span className=\"truncate\">{team.name}</span>\n                               </a>\n                             </li>\n                           ))}\n                         </ul>\n                        </li> */}\n                        <li className=\"mt-auto\">\n                          <a\n                          href=\"#\"\n                          className=\"group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-700 hover:bg-gray-50 hover:text-indigo-600\">\n\n                            <Cog6ToothIcon\n                            className=\"h-6 w-6 shrink-0 text-gray-400 group-hover:text-indigo-600\"\n                            aria-hidden=\"true\" />\n\n                            Settings\n                          </a>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n\n                <div className=\"lg:pl-72\">\n                  <div className=\"sticky top-0 z-40 lg:mx-auto lg:max-w-7xl lg:px-8\">\n                    <div className=\"flex h-16 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-0 lg:shadow-none\">\n                      <button\n                      type=\"button\"\n                      className=\"-m-2.5 p-2.5 text-gray-700 lg:hidden\"\n                      onClick={() => setSidebarOpen(true)}>\n\n                        <span className=\"sr-only\">Open sidebar</span>\n                        <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </button>\n\n                      {/* Separator */}\n                      <div className=\"h-6 w-px bg-gray-200 lg:hidden\" aria-hidden=\"true\" />\n\n                      <div className=\"flex flex-1 gap-x-4 self-stretch lg:gap-x-6\">\n                        <form className=\"relative flex flex-1\" action=\"#\" method=\"GET\">\n                          <label htmlFor=\"search-field\" className=\"sr-only\">\n                            Search\n                          </label>\n                          <MagnifyingGlassIcon\n                          className=\"pointer-events-none absolute inset-y-0 left-0 h-full w-5 text-gray-400\"\n                          aria-hidden=\"true\" />\n\n                          <input\n                          id=\"search-field\"\n                          className=\"block h-full w-full border-0 py-0 pl-8 pr-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm\"\n                          placeholder=\"Search...\"\n                          type=\"search\"\n                          name=\"search\" />\n\n                        </form>\n                        <div className=\"flex items-center gap-x-4 lg:gap-x-6\">\n                          <button type=\"button\" className=\"-m-2.5 p-2.5 text-gray-400 hover:text-gray-500\">\n                            <span className=\"sr-only\">View notifications</span>\n                            <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                          </button>\n\n                          {/* Separator */}\n                          <div className=\"hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200\" aria-hidden=\"true\" />\n\n                          {/* Profile dropdown */}\n                          <Menu as=\"div\" className=\"relative\">\n                            <Menu.Button className=\"-m-1.5 flex items-center p-1.5\">\n                              <span className=\"sr-only\">Open user menu</span>\n                              <img\n                              className=\"h-8 w-8 rounded-full bg-gray-50\"\n                              src={userPng}\n                              alt=\"\" />\n\n                              <span className=\"hidden lg:flex lg:items-center\">\n                                <span className=\"ml-4 text-sm font-semibold leading-6 text-gray-900\" aria-hidden=\"true\">\n                                </span>\n                                <ChevronDownIcon className=\"ml-2 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                              </span>\n                            </Menu.Button>\n                            <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-100\"\n                            enterFrom=\"transform opacity-0 scale-95\"\n                            enterTo=\"transform opacity-100 scale-100\"\n                            leave=\"transition ease-in duration-75\"\n                            leaveFrom=\"transform opacity-100 scale-100\"\n                            leaveTo=\"transform opacity-0 scale-95\">\n\n                              <Menu.Items className=\"absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none\">\n                                <Menu.Item>\n                                  {({ active }) =>\n                                <a\n                                  href='profile'\n                                  className={classNames(\n                                    active ? 'bg-gray-50' : '',\n                                    'block px-3 py-1 text-sm leading-6 text-gray-900'\n                                  )}>\n\n                                      Your Profile\n                                    </a>}\n\n                                </Menu.Item>\n                                <Menu.Item>\n                                  {({ active }) =>\n                                <Form method=\"POST\" action=\"/logout\">\n                                      <button\n                                    type=\"submit\"\n                                    className={classNames(\n                                      active ? 'bg-gray-50' : '',\n                                      'block px-3 py-1 text-sm leading-6 text-gray-900 w-full text-left'\n                                    )}>\n\n                                        Sign out\n                                      </button>\n                                    </Form>}\n\n                                </Menu.Item>\n                              </Menu.Items>\n                            </Transition>\n                          </Menu>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <main className=\"py-10\">\n                    <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                      <Outlet />\n                    </div>\n                  </main>\n                </div>\n              </div>\n            </div>\n          </div> :\n        <div className=\"max-w-7xl mx-auto w-full\">\n              <Header />\n              <Outlet />\n              <Footer />\n            </div>}\n\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(fullName: string, email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      fullName,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function updateUserById(id: User[\"id\"], data: Partial<User>) {\n  return prisma.user.update({ where: { id }, data });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient | undefined;\n}\n\n// This is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// In production, we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { Fragment, useState } from 'react'\r\nimport { Dialog, Popover, Transition } from '@headlessui/react'\r\nimport {\r\n  Bars3Icon,\r\n  ChevronDownIcon,\r\n  XMarkIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { PhoneIcon, PlayCircleIcon } from '@heroicons/react/20/solid'\r\nimport logoPng from '~/assets/images/logos/base.png'\r\nimport { Link } from '@remix-run/react'\r\n\r\n// const products = [\r\n//   { name: 'Analytics', description: 'Get a better understanding of your traffic', href: '#', icon: ChartPieIcon },\r\n//   { name: 'Engagement', description: 'Speak directly to your customers', href: '#', icon: CursorArrowRaysIcon },\r\n//   { name: 'Security', description: 'Your customers\u2019 data will be safe and secure', href: '#', icon: FingerPrintIcon },\r\n//   { name: 'Integrations', description: 'Connect with third-party tools', href: '#', icon: SquaresPlusIcon },\r\n//   { name: 'Automations', description: 'Build strategic funnels that will convert', href: '#', icon: ArrowPathIcon },\r\n// ]\r\nconst callsToAction = [\r\n  { name: 'Watch demo', href: '#', icon: PlayCircleIcon },\r\n  { name: 'Contact sales', href: '#', icon: PhoneIcon },\r\n]\r\nconst company = [\r\n  { name: 'About us', href: '#', description: 'Learn more about our company values and mission to empower others' },\r\n  { name: 'Careers', href: '#', description: 'Looking for you next career opportunity? See all of our open positions' },\r\n  {\r\n    name: 'Support',\r\n    href: 'contact-us',\r\n    description: 'Get in touch with our dedicated support team or reach out on our community forums',\r\n  },\r\n  { name: 'Blog', href: '#', description: 'Read our latest announcements and get perspectives from our team' },\r\n]\r\n\r\nexport default function Header() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\r\n\r\n  return (\r\n    <header className=\"bg-white\">\r\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\r\n        <div className=\"flex lg:flex-1\">\r\n          <Link to={'/'} className=\"-m-1.5 p-1.5\">\r\n            <span className=\"sr-only\">BioSolver</span>\r\n            <img className=\"h-16 w-auto\" src={logoPng} alt=\"BioSolver Logo\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex lg:hidden\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\r\n            onClick={() => setMobileMenuOpen(true)}\r\n          >\r\n            <span className=\"sr-only\">Open main menu</span>\r\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n        <Popover.Group className=\"hidden lg:flex lg:gap-x-12\">\r\n          {/* <Popover className=\"relative\">\r\n            <Popover.Button className=\"flex items-center gap-x-1 text-sm font-semibold leading-6 text-gray-900\">\r\n              Product\r\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n            </Popover.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-screen max-w-md overflow-hidden rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5\">\r\n                <div className=\"p-4\">\r\n                  {products.map((item) => (\r\n                    <div\r\n                      key={item.name}\r\n                      className=\"group relative flex gap-x-6 rounded-lg p-4 text-sm leading-6 hover:bg-gray-50\"\r\n                    >\r\n                      <div className=\"mt-1 flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\r\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\r\n                      </div>\r\n                      <div className=\"flex-auto\">\r\n                        <a href={item.href} className=\"block font-semibold text-gray-900\">\r\n                          {item.name}\r\n                          <span className=\"absolute inset-0\" />\r\n                        </a>\r\n                        <p className=\"mt-1 text-gray-600\">{item.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50\">\r\n                  {callsToAction.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold leading-6 text-gray-900 hover:bg-gray-100\"\r\n                    >\r\n                      <item.icon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </Popover> */}\r\n\r\n          <Link to={'/for-solvers'} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n            For Solvers\r\n          </Link>\r\n          <Link to={'/for-seekers'} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n            For Seekers\r\n          </Link>\r\n\r\n          <Popover className=\"relative\">\r\n            <Popover.Button className=\"flex items-center gap-x-1 text-sm font-semibold leading-6 text-gray-900\">\r\n              Company\r\n              <ChevronDownIcon className=\"h-5 w-5 flex-none text-gray-400\" aria-hidden=\"true\" />\r\n            </Popover.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <Popover.Panel className=\"absolute -left-8 top-full z-10 mt-3 w-96 rounded-3xl bg-white p-4 shadow-lg ring-1 ring-gray-900/5\">\r\n                {company.map((item) => (\r\n                  <div key={item.name} className=\"relative rounded-lg p-4 hover:bg-gray-50\">\r\n                    <a href={item.href} className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                      {item.name}\r\n                      <span className=\"absolute inset-0\" />\r\n                    </a>\r\n                    <p className=\"mt-1 text-sm leading-6 text-gray-600\">{item.description}</p>\r\n                  </div>\r\n                ))}\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </Popover>\r\n        </Popover.Group>\r\n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\r\n          <Link to={\"/login\"} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n            Log in <span aria-hidden=\"true\">&rarr;</span>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\r\n        <div className=\"fixed inset-0 z-10\" />\r\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 flex w-full flex-col justify-between overflow-y-auto bg-white sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <a href=\"#\" className=\"-m-1.5 p-1.5\">\r\n                <span className=\"sr-only\">Your Company</span>\r\n                <img\r\n                  className=\"h-8 w-auto\"\r\n                  src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n              <button\r\n                type=\"button\"\r\n                className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                <span className=\"sr-only\">Close menu</span>\r\n                <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"mt-6 flow-root\">\r\n              <div className=\"-my-6 divide-y divide-gray-500/10\">\r\n                {/* <div className=\"space-y-2 py-6\">\r\n                  {products.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"group -mx-3 flex items-center gap-x-6 rounded-lg p-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                    >\r\n                      <div className=\"flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\r\n                        <item.icon className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\" aria-hidden=\"true\" />\r\n                      </div>\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div> */}\r\n                <div className=\"space-y-2 py-6\">                  \r\n                  <Link to={\"/for-seekers\"}\r\n                    className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                  >\r\n                    For Seekers\r\n                  </Link>\r\n                  <Link to={\"/for-solvers\"}\r\n                    className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                  >\r\n                    For Solvers\r\n                  </Link>                  \r\n\r\n                  {company.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                    >\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n                <div className=\"py-6\">\r\n                  <Link to={\"/login\"}\r\n                    className=\"-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                  >Log In</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sticky bottom-0 grid grid-cols-2 divide-x divide-gray-900/5 bg-gray-50 text-center\">\r\n            {callsToAction.map((item) => (\r\n              <a\r\n                key={item.name}\r\n                href={item.href}\r\n                className=\"p-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-100\"\r\n              >\r\n                {item.name}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </Dialog.Panel>\r\n      </Dialog>\r\n    </header>\r\n  )\r\n}", "import { FaLinkedin, FaFacebook } from \"react-icons/fa\";\r\n\r\nconst navigation = {\r\n  platform: [\r\n    { name: 'For Solvers', href: 'for-solvers' },\r\n    { name: 'For Seekers', href: 'for-seekers' },\r\n  ],\r\n  support: [\r\n    { name: 'Contact Us', href: 'contact-us' },\r\n  ],\r\n  company: [\r\n    { name: 'About', href: '#' },\r\n    { name: 'Blog', href: '#' },\r\n    { name: 'Jobs', href: '#' },\r\n    { name: 'Press', href: '#' },\r\n    { name: 'Partners', href: '#' },\r\n  ],\r\n  legal: [\r\n    { name: 'Privacy', href: 'privacy-policy' },\r\n    { name: 'Terms', href: 'terms-and-conditions' },\r\n  ],\r\n  social: [\r\n    {\r\n      name: 'LinkedIn',\r\n      href: 'https://www.linkedin.com/company/bio-solver/',\r\n      icon: <FaLinkedin />\r\n\r\n    },\r\n    {\r\n      name: 'Facebook',\r\n      href: 'https://www.facebook.com/people/biosolverio/100090926217577/',\r\n      icon: <FaFacebook />\r\n    },\r\n  ],\r\n}\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"bg-white\" aria-labelledby=\"footer-heading\">\r\n      <h2 id=\"footer-heading\" className=\"sr-only\">\r\n        Footer\r\n      </h2>\r\n      <div className=\"mx-auto max-w-7xl px-6 pb-8 pt-20 sm:pt-24 lg:px-8 lg:pt-32\">\r\n        <div className=\"xl:grid xl:grid-cols-3 xl:gap-8\">\r\n          <div className=\"grid grid-cols-2 gap-8 xl:col-span-2\">\r\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\r\n              <div>\r\n                <h3 className=\"text-sm font-semibold leading-6 text-gray-900\">Platform</h3>\r\n                <ul role=\"list\" className=\"mt-6 space-y-4\">\r\n                  {navigation.platform.map((item) => (\r\n                    <li key={item.name}>\r\n                      <a href={item.href} className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\r\n                        {item.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"mt-10 md:mt-0\">\r\n                <h3 className=\"text-sm font-semibold leading-6 text-gray-900\">Support</h3>\r\n                <ul role=\"list\" className=\"mt-6 space-y-4\">\r\n                  {navigation.support.map((item) => (\r\n                    <li key={item.name}>\r\n                      <a href={item.href} className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\r\n                        {item.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"md:grid md:grid-cols-2 md:gap-8\">\r\n              <div>\r\n                <h3 className=\"text-sm font-semibold leading-6 text-gray-900\">Company</h3>\r\n                <ul role=\"list\" className=\"mt-6 space-y-4\">\r\n                  {navigation.company.map((item) => (\r\n                    <li key={item.name}>\r\n                      <a href={item.href} className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\r\n                        {item.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className=\"mt-10 md:mt-0\">\r\n                <h3 className=\"text-sm font-semibold leading-6 text-gray-900\">Legal</h3>\r\n                <ul role=\"list\" className=\"mt-6 space-y-4\">\r\n                  {navigation.legal.map((item) => (\r\n                    <li key={item.name}>\r\n                      <a href={item.href} className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\r\n                        {item.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-10 xl:mt-0\">\r\n            <h3 className=\"text-sm font-semibold leading-6 text-gray-900\">Subscribe to our newsletter</h3>\r\n            <p className=\"mt-2 text-sm leading-6 text-gray-600\">\r\n              The latest news, articles, and resources, sent to your inbox weekly.\r\n            </p>\r\n            <form action=\"https://app.formzillion.com/f/nNcNse-I\" className=\"mt-6 sm:flex sm:max-w-md\">\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"w-full min-w-0 appearance-none rounded-md border-0 bg-white px-3 py-1.5 text-base text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:w-64 sm:text-sm sm:leading-6 xl:w-full\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n              <div className=\"mt-4 sm:ml-4 sm:mt-0 sm:flex-shrink-0\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"flex w-full items-center justify-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600\"\r\n                >\r\n                  Subscribe\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-16 border-t border-gray-900/10 pt-8 sm:mt-20 md:flex md:items-center md:justify-between lg:mt-24\">\r\n          <div className=\"flex space-x-6 md:order-2\">\r\n            {navigation.social.map((item) => (\r\n              <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\r\n                <span className=\"sr-only\">{item.name}</span>\r\n                <item.icon.type className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <p className=\"mt-8 text-xs leading-5 text-gray-500 md:order-1 md:mt-0\">\r\n            &copy; 2023 BIOSOLVER Corp. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n", "\nimport * as entryServer from \"D:\\\\spaces\\\\BioSolver\\\\code\\\\bs-web\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/profile.education.degree.new.tsx\";\nimport * as route2 from \"./routes/profile.degrees.$degreeId.tsx\";\nimport * as route3 from \"./routes/profile.education.back.tsx\";\nimport * as route4 from \"./routes/profile.professional.tsx\";\nimport * as route5 from \"./routes/terms-and-conditions.tsx\";\nimport * as route6 from \"./routes/profile.education.tsx\";\nimport * as route7 from \"./routes/profile.personal.tsx\";\nimport * as route8 from \"./routes/seeker.dashboard.tsx\";\nimport * as route9 from \"./routes/profile.degrees.tsx\";\nimport * as route10 from \"./routes/privacy-policy.tsx\";\nimport * as route11 from \"./routes/profile.single.tsx\";\nimport * as route12 from \"./routes/profile.skills.tsx\";\nimport * as route13 from \"./routes/profile._index.tsx\";\nimport * as route14 from \"./routes/notes.$noteId.tsx\";\nimport * as route15 from \"./routes/notes._index.tsx\";\nimport * as route16 from \"./routes/profile.work.tsx\";\nimport * as route17 from \"./routes/for-seekers.tsx\";\nimport * as route18 from \"./routes/for-solvers.tsx\";\nimport * as route19 from \"./routes/healthcheck.tsx\";\nimport * as route20 from \"./routes/contact-us.tsx\";\nimport * as route21 from \"./routes/dashboard.tsx\";\nimport * as route22 from \"./routes/documents.tsx\";\nimport * as route23 from \"./routes/notes.new.tsx\";\nimport * as route24 from \"./routes/calendar.tsx\";\nimport * as route25 from \"./routes/messages.tsx\";\nimport * as route26 from \"./routes/register.tsx\";\nimport * as route27 from \"./routes/matches.tsx\";\nimport * as route28 from \"./routes/profile.tsx\";\nimport * as route29 from \"./routes/reports.tsx\";\nimport * as route30 from \"./routes/logout.tsx\";\nimport * as route31 from \"./routes/_index.tsx\";\nimport * as route32 from \"./routes/login.tsx\";\nimport * as route33 from \"./routes/notes.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/profile.education.degree.new\": {\n      id: \"routes/profile.education.degree.new\",\n      parentId: \"routes/profile.education\",\n      path: \"degree/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/profile.degrees.$degreeId\": {\n      id: \"routes/profile.degrees.$degreeId\",\n      parentId: \"routes/profile.degrees\",\n      path: \":degreeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/profile.education.back\": {\n      id: \"routes/profile.education.back\",\n      parentId: \"routes/profile.education\",\n      path: \"back\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/profile.professional\": {\n      id: \"routes/profile.professional\",\n      parentId: \"routes/profile\",\n      path: \"professional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/terms-and-conditions\": {\n      id: \"routes/terms-and-conditions\",\n      parentId: \"root\",\n      path: \"terms-and-conditions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/profile.education\": {\n      id: \"routes/profile.education\",\n      parentId: \"routes/profile\",\n      path: \"education\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/profile.personal\": {\n      id: \"routes/profile.personal\",\n      parentId: \"routes/profile\",\n      path: \"personal\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/seeker.dashboard\": {\n      id: \"routes/seeker.dashboard\",\n      parentId: \"root\",\n      path: \"seeker/dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/profile.degrees\": {\n      id: \"routes/profile.degrees\",\n      parentId: \"routes/profile\",\n      path: \"degrees\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/privacy-policy\": {\n      id: \"routes/privacy-policy\",\n      parentId: \"root\",\n      path: \"privacy-policy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/profile.single\": {\n      id: \"routes/profile.single\",\n      parentId: \"routes/profile\",\n      path: \"single\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/profile.skills\": {\n      id: \"routes/profile.skills\",\n      parentId: \"routes/profile\",\n      path: \"skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/profile._index\": {\n      id: \"routes/profile._index\",\n      parentId: \"routes/profile\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/notes.$noteId\": {\n      id: \"routes/notes.$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/notes._index\": {\n      id: \"routes/notes._index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/profile.work\": {\n      id: \"routes/profile.work\",\n      parentId: \"routes/profile\",\n      path: \"work\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/for-seekers\": {\n      id: \"routes/for-seekers\",\n      parentId: \"root\",\n      path: \"for-seekers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/for-solvers\": {\n      id: \"routes/for-solvers\",\n      parentId: \"root\",\n      path: \"for-solvers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/contact-us\": {\n      id: \"routes/contact-us\",\n      parentId: \"root\",\n      path: \"contact-us\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/documents\": {\n      id: \"routes/documents\",\n      parentId: \"root\",\n      path: \"documents\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/notes.new\": {\n      id: \"routes/notes.new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/calendar\": {\n      id: \"routes/calendar\",\n      parentId: \"root\",\n      path: \"calendar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/messages\": {\n      id: \"routes/messages\",\n      parentId: \"root\",\n      path: \"messages\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/matches\": {\n      id: \"routes/matches\",\n      parentId: \"root\",\n      path: \"matches\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/profile\": {\n      id: \"routes/profile\",\n      parentId: \"root\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/reports\": {\n      id: \"routes/reports\",\n      parentId: \"root\",\n      path: \"reports\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    }\n  };", "import { ActionArgs, redirect, json } from \"@remix-run/node\";\r\nimport { prisma } from \"~/db.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const {\r\n    degreeId\r\n  } = params\r\n  if (!degreeId) throw new Error('No degreeId provided')\r\n  const body = await request.formData();\r\n  const actionType = body.get('action')\r\n  if (actionType === 'addAccomplishment') {\r\n    const title = body.get('title') as string\r\n    const publisher = body.get('publisher') as string\r\n    const link = body.get('link') as string\r\n    const type = body.get('type') as string\r\n    const details = body.get('details') as string\r\n    const status = body.get('status') as string\r\n    const category = body.get('category') as string\r\n    const organization = body.get('organization') as string\r\n    const objective = body.get('objective') as string\r\n\r\n    await prisma.accomplishment.create({\r\n      data: {\r\n        title,\r\n        publisher,\r\n        link,\r\n        type,\r\n        details,\r\n        status,\r\n        category,\r\n        organization,\r\n        objective,\r\n        degreeId\r\n      }\r\n    })\r\n\r\n    const accomplishments = await prisma.accomplishment.findMany({\r\n      where: {\r\n        degreeId\r\n      }\r\n    })\r\n\r\n    return json({\r\n      accomplishments\r\n    })\r\n  } else {\r\n    throw new Error('Invalid action type')\r\n  }\r\n}", "import { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useSubmit } from \"@remix-run/react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport countries from \"~/assets/data/countries\";\r\nimport DegreeCard from \"~/components/DegreeCard\";\r\nimport DegreeForm from \"~/components/DegreeForm\";\r\nimport EducationForm from \"~/components/EducationForm\";\r\nimport { prisma } from \"~/db.server\";\r\nimport { getNoteListItems } from \"~/models/note.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { Degree } from \"~/types.client\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request);\r\n  const degrees = await prisma.degree.findMany({\r\n    where: {\r\n      userId\r\n    }\r\n  });\r\n  return json({ degrees });\r\n};\r\n\r\nexport const action = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request);\r\n  const formData = await request.formData();\r\n  console.log(formData)\r\n  const degrees = await prisma.degree.findMany({\r\n    where: {\r\n      userId\r\n    }\r\n  });\r\n  return json({ degrees });\r\n}\r\n\r\nexport default function () {\r\n  const [addingDegree, setAddingDegree] = useState(false);\r\n  const { degrees } = useLoaderData<typeof loader>();\r\n\r\n  const { register, watch, control, handleSubmit } = useForm<Degree>();\r\n  const isCurrentlyStudying = watch('currentlyStudying');\r\n\r\n  const formRef = useRef(null);\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'accomplishments',\r\n  })\r\n\r\n  const submit = useSubmit()\r\n\r\n  return (\r\n    <div className='w-full max-w-4xl mx-auto'>\r\n      {\r\n        degrees.map((degree, index) => (\r\n          <DegreeCard degree={degree} key={index} />\r\n        ))\r\n      }\r\n      {\r\n        !addingDegree && <button onClick={() => {\r\n          setAddingDegree(true);\r\n        }} className='w-full text-center border-gray-400 rounded-md border-dashed border-2 py-5'>\r\n          Add Degree\r\n        </button>\r\n      }\r\n      {\r\n        addingDegree && <Form method=\"post\" onSubmit={\r\n          handleSubmit((data) => {\r\n            console.log(data);\r\n            submit(formRef.current)\r\n          })\r\n        } className=\"mb-4 border-gray-500 border-solid rounded-md p-5 border-2\" ref={formRef}>\r\n          <label htmlFor=\"name\" className=\"block mb-2 font-medium text-gray-700\">\r\n            Degree\r\n          </label>\r\n          <select\r\n            id=\"name\"\r\n            {...register(\"name\", { required: true })}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"\">Select Degree</option>\r\n            <option value=\"UG Diploma\">UG Diploma</option>\r\n            <option value=\"Bachelors\">Bachelors</option>\r\n            <option value=\"PG Diploma\">PG Diploma</option>\r\n            <option value=\"Professional Degree\">Professional Degree</option>\r\n            <option value=\"Masters\">Masters</option>\r\n            <option value=\"PhD or Doctoral Studies\">PhD or Doctoral Studies</option>\r\n          </select>\r\n\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Field\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"field\"\r\n              {...register(\"field\", { required: true })}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Country\r\n            </label>\r\n            <select\r\n              id=\"country\"\r\n              {...register(\"country\", { required: true })}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            >\r\n              <option value=\"\">Select Country</option>\r\n              {\r\n                countries.map((country) => (\r\n                  <option key={country.code} value={country.name}>{country.name}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"university\" className=\"block mb-2 font-medium text gray-700\">\r\n              University\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"university\"\r\n              {...register(\"university\", { required: true })}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"started\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Start\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"start\"\r\n              {...register(\"startDate\", { required: true })}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n\r\n          {!isCurrentlyStudying && <div className=\"mb-4\">\r\n            <label htmlFor=\"end\" className=\"block mb-2 font-medium text-gray-700\">\r\n              End\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"end\"\r\n              {...register(\"endDate\", { required: true })}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>}\r\n\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"currentlyStudying\"\r\n              {...register(\"currentlyStudying\")}\r\n              className=\"mr-2\"\r\n            />\r\n            <label htmlFor=\"currentlyStudying\" className=\"font-medium text-gray-700\">\r\n              Currently Studying Here\r\n            </label>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            {\r\n              fields.map((field, index) => {\r\n\r\n                return (\r\n                  <div className=\"mb-4\">\r\n                    <label htmlFor=\"accomplishment\" className=\"block mb-2 font-medium text-gray-700\">\r\n                      Accomplishment {index + 1}\r\n                    </label>\r\n                    <select\r\n                      id=\"type\"\r\n                      {...register(`accomplishments.${index}.type`, { required: true })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    >\r\n                      <option value=\"\">Select Accomplishment</option>\r\n                      <option value=\"Thesis\">Thesis</option>\r\n                      <option value=\"Patent\">Patent</option>\r\n                      <option value=\"Published Work\">Published Work</option>\r\n                    </select>\r\n\r\n                    {\r\n                      field.type === 'Thesis' && (\r\n                        <div className=\"mb-4\">\r\n                          <label htmlFor=\"title\" className=\"block mb-2 font-medium text-gray-700\">\r\n                            Title\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            {...register(`accomplishments.${index}.title`, { required: true })}\r\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                          />\r\n                        </div>\r\n                      )\r\n                    }\r\n\r\n                    {\r\n                      field.type === 'Patent' && (\r\n                        <div className=\"mb-4\">\r\n                          <label htmlFor=\"title\" className=\"block mb-2 font-medium text-gray-700\">\r\n                            Title\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            {...register(`accomplishments.${index}.title`, { required: true })}\r\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                          />\r\n                        </div>\r\n                      )\r\n                    }\r\n\r\n                    {\r\n                      field.type === 'Published Work' && (\r\n                        <div className=\"mb-4\">\r\n                          <label htmlFor=\"title\" className=\"block mb-2 font-medium text-gray-700\">\r\n                            Title\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            {...register(`accomplishments.${index}.title`, { required: true })}\r\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                          />\r\n                        </div>\r\n                      )\r\n                    }\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n            <button onClick={() => append({}, {\r\n              shouldFocus: true,\r\n            })} className='w-full text-center border-gray-400 rounded-md border-dashed border-2 py-5'>\r\n              Add an Accomplishment\r\n            </button>\r\n            <button type='submit' className='w-full text-center border-gray-400 rounded-md border-solid border-2 py-5'>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      }\r\n    </div>\r\n  )\r\n}", "export default [\r\n  { \"name\": \"Afghanistan\", \"code\": \"AF\" },\r\n  { \"name\": \"\u00C5land Islands\", \"code\": \"AX\" },\r\n  { \"name\": \"Albania\", \"code\": \"AL\" },\r\n  { \"name\": \"Algeria\", \"code\": \"DZ\" },\r\n  { \"name\": \"American Samoa\", \"code\": \"AS\" },\r\n  { \"name\": \"AndorrA\", \"code\": \"AD\" },\r\n  { \"name\": \"Angola\", \"code\": \"AO\" },\r\n  { \"name\": \"Anguilla\", \"code\": \"AI\" },\r\n  { \"name\": \"Antarctica\", \"code\": \"AQ\" },\r\n  { \"name\": \"Antigua and Barbuda\", \"code\": \"AG\" },\r\n  { \"name\": \"Argentina\", \"code\": \"AR\" },\r\n  { \"name\": \"Armenia\", \"code\": \"AM\" },\r\n  { \"name\": \"Aruba\", \"code\": \"AW\" },\r\n  { \"name\": \"Australia\", \"code\": \"AU\" },\r\n  { \"name\": \"Austria\", \"code\": \"AT\" },\r\n  { \"name\": \"Azerbaijan\", \"code\": \"AZ\" },\r\n  { \"name\": \"Bahamas\", \"code\": \"BS\" },\r\n  { \"name\": \"Bahrain\", \"code\": \"BH\" },\r\n  { \"name\": \"Bangladesh\", \"code\": \"BD\" },\r\n  { \"name\": \"Barbados\", \"code\": \"BB\" },\r\n  { \"name\": \"Belarus\", \"code\": \"BY\" },\r\n  { \"name\": \"Belgium\", \"code\": \"BE\" },\r\n  { \"name\": \"Belize\", \"code\": \"BZ\" },\r\n  { \"name\": \"Benin\", \"code\": \"BJ\" },\r\n  { \"name\": \"Bermuda\", \"code\": \"BM\" },\r\n  { \"name\": \"Bhutan\", \"code\": \"BT\" },\r\n  { \"name\": \"Bolivia\", \"code\": \"BO\" },\r\n  { \"name\": \"Bosnia and Herzegovina\", \"code\": \"BA\" },\r\n  { \"name\": \"Botswana\", \"code\": \"BW\" },\r\n  { \"name\": \"Bouvet Island\", \"code\": \"BV\" },\r\n  { \"name\": \"Brazil\", \"code\": \"BR\" },\r\n  { \"name\": \"British Indian Ocean Territory\", \"code\": \"IO\" },\r\n  { \"name\": \"Brunei Darussalam\", \"code\": \"BN\" },\r\n  { \"name\": \"Bulgaria\", \"code\": \"BG\" },\r\n  { \"name\": \"Burkina Faso\", \"code\": \"BF\" },\r\n  { \"name\": \"Burundi\", \"code\": \"BI\" },\r\n  { \"name\": \"Cambodia\", \"code\": \"KH\" },\r\n  { \"name\": \"Cameroon\", \"code\": \"CM\" },\r\n  { \"name\": \"Canada\", \"code\": \"CA\" },\r\n  { \"name\": \"Cape Verde\", \"code\": \"CV\" },\r\n  { \"name\": \"Cayman Islands\", \"code\": \"KY\" },\r\n  { \"name\": \"Central African Republic\", \"code\": \"CF\" },\r\n  { \"name\": \"Chad\", \"code\": \"TD\" },\r\n  { \"name\": \"Chile\", \"code\": \"CL\" },\r\n  { \"name\": \"China\", \"code\": \"CN\" },\r\n  { \"name\": \"Christmas Island\", \"code\": \"CX\" },\r\n  { \"name\": \"Cocos (Keeling) Islands\", \"code\": \"CC\" },\r\n  { \"name\": \"Colombia\", \"code\": \"CO\" },\r\n  { \"name\": \"Comoros\", \"code\": \"KM\" },\r\n  { \"name\": \"Congo\", \"code\": \"CG\" },\r\n  { \"name\": \"Congo, The Democratic Republic of the\", \"code\": \"CD\" },\r\n  { \"name\": \"Cook Islands\", \"code\": \"CK\" },\r\n  { \"name\": \"Costa Rica\", \"code\": \"CR\" },\r\n  { \"name\": \"Croatia\", \"code\": \"HR\" },\r\n  { \"name\": \"Cuba\", \"code\": \"CU\" },\r\n  { \"name\": \"Cyprus\", \"code\": \"CY\" },\r\n  { \"name\": \"Czech Republic\", \"code\": \"CZ\" },\r\n  { \"name\": \"Denmark\", \"code\": \"DK\" },\r\n  { \"name\": \"Djibouti\", \"code\": \"DJ\" },\r\n  { \"name\": \"Dominica\", \"code\": \"DM\" },\r\n  { \"name\": \"Dominican Republic\", \"code\": \"DO\" },\r\n  { \"name\": \"Ecuador\", \"code\": \"EC\" },\r\n  { \"name\": \"Egypt\", \"code\": \"EG\" },\r\n  { \"name\": \"El Salvador\", \"code\": \"SV\" },\r\n  { \"name\": \"Equatorial Guinea\", \"code\": \"GQ\" },\r\n  { \"name\": \"Eritrea\", \"code\": \"ER\" },\r\n  { \"name\": \"Estonia\", \"code\": \"EE\" },\r\n  { \"name\": \"Ethiopia\", \"code\": \"ET\" },\r\n  { \"name\": \"Falkland Islands (Malvinas)\", \"code\": \"FK\" },\r\n  { \"name\": \"Faroe Islands\", \"code\": \"FO\" },\r\n  { \"name\": \"Fiji\", \"code\": \"FJ\" },\r\n  { \"name\": \"Finland\", \"code\": \"FI\" },\r\n  { \"name\": \"France\", \"code\": \"FR\" },\r\n  { \"name\": \"French Guiana\", \"code\": \"GF\" },\r\n  { \"name\": \"French Polynesia\", \"code\": \"PF\" },\r\n  { \"name\": \"French Southern Territories\", \"code\": \"TF\" },\r\n  { \"name\": \"Gabon\", \"code\": \"GA\" },\r\n  { \"name\": \"Gambia\", \"code\": \"GM\" },\r\n  { \"name\": \"Georgia\", \"code\": \"GE\" },\r\n  { \"name\": \"Germany\", \"code\": \"DE\" },\r\n  { \"name\": \"Ghana\", \"code\": \"GH\" },\r\n  { \"name\": \"Gibraltar\", \"code\": \"GI\" },\r\n  { \"name\": \"Greece\", \"code\": \"GR\" },\r\n  { \"name\": \"Greenland\", \"code\": \"GL\" },\r\n  { \"name\": \"Grenada\", \"code\": \"GD\" },\r\n  { \"name\": \"Guadeloupe\", \"code\": \"GP\" },\r\n  { \"name\": \"Guam\", \"code\": \"GU\" },\r\n  { \"name\": \"Guatemala\", \"code\": \"GT\" },\r\n  { \"name\": \"Guernsey\", \"code\": \"GG\" },\r\n  { \"name\": \"Guinea\", \"code\": \"GN\" },\r\n  { \"name\": \"Guinea-Bissau\", \"code\": \"GW\" },\r\n  { \"name\": \"Guyana\", \"code\": \"GY\" },\r\n  { \"name\": \"Haiti\", \"code\": \"HT\" },\r\n  { \"name\": \"Heard Island and Mcdonald Islands\", \"code\": \"HM\" },\r\n  { \"name\": \"Holy See (Vatican City State)\", \"code\": \"VA\" },\r\n  { \"name\": \"Honduras\", \"code\": \"HN\" },\r\n  { \"name\": \"Hong Kong\", \"code\": \"HK\" },\r\n  { \"name\": \"Hungary\", \"code\": \"HU\" },\r\n  { \"name\": \"Iceland\", \"code\": \"IS\" },\r\n  { \"name\": \"India\", \"code\": \"IN\" },\r\n  { \"name\": \"Indonesia\", \"code\": \"ID\" },\r\n  { \"name\": \"Iran, Islamic Republic Of\", \"code\": \"IR\" },\r\n  { \"name\": \"Iraq\", \"code\": \"IQ\" },\r\n  { \"name\": \"Ireland\", \"code\": \"IE\" },\r\n  { \"name\": \"Isle of Man\", \"code\": \"IM\" },\r\n  { \"name\": \"Israel\", \"code\": \"IL\" },\r\n  { \"name\": \"Italy\", \"code\": \"IT\" },\r\n  { \"name\": \"Jamaica\", \"code\": \"JM\" },\r\n  { \"name\": \"Japan\", \"code\": \"JP\" },\r\n  { \"name\": \"Jersey\", \"code\": \"JE\" },\r\n  { \"name\": \"Jordan\", \"code\": \"JO\" },\r\n  { \"name\": \"Kazakhstan\", \"code\": \"KZ\" },\r\n  { \"name\": \"Kenya\", \"code\": \"KE\" },\r\n  { \"name\": \"Kiribati\", \"code\": \"KI\" },\r\n  { \"name\": \"Korea, Republic of\", \"code\": \"KR\" },\r\n  { \"name\": \"Kuwait\", \"code\": \"KW\" },\r\n  { \"name\": \"Kyrgyzstan\", \"code\": \"KG\" },\r\n  { \"name\": \"Latvia\", \"code\": \"LV\" },\r\n  { \"name\": \"Lebanon\", \"code\": \"LB\" },\r\n  { \"name\": \"Lesotho\", \"code\": \"LS\" },\r\n  { \"name\": \"Liberia\", \"code\": \"LR\" },\r\n  { \"name\": \"Libyan Arab Jamahiriya\", \"code\": \"LY\" },\r\n  { \"name\": \"Liechtenstein\", \"code\": \"LI\" },\r\n  { \"name\": \"Lithuania\", \"code\": \"LT\" },\r\n  { \"name\": \"Luxembourg\", \"code\": \"LU\" },\r\n  { \"name\": \"Macao\", \"code\": \"MO\" },\r\n  { \"name\": \"North Macedonia\", \"code\": \"MK\" },\r\n  { \"name\": \"Madagascar\", \"code\": \"MG\" },\r\n  { \"name\": \"Malawi\", \"code\": \"MW\" },\r\n  { \"name\": \"Malaysia\", \"code\": \"MY\" },\r\n  { \"name\": \"Maldives\", \"code\": \"MV\" },\r\n  { \"name\": \"Mali\", \"code\": \"ML\" },\r\n  { \"name\": \"Malta\", \"code\": \"MT\" },\r\n  { \"name\": \"Marshall Islands\", \"code\": \"MH\" },\r\n  { \"name\": \"Martinique\", \"code\": \"MQ\" },\r\n  { \"name\": \"Mauritania\", \"code\": \"MR\" },\r\n  { \"name\": \"Mauritius\", \"code\": \"MU\" },\r\n  { \"name\": \"Mayotte\", \"code\": \"YT\" },\r\n  { \"name\": \"Mexico\", \"code\": \"MX\" },\r\n  { \"name\": \"Micronesia, Federated States of\", \"code\": \"FM\" },\r\n  { \"name\": \"Moldova, Republic of\", \"code\": \"MD\" },\r\n  { \"name\": \"Monaco\", \"code\": \"MC\" },\r\n  { \"name\": \"Mongolia\", \"code\": \"MN\" },\r\n  { \"name\": \"Montserrat\", \"code\": \"MS\" },\r\n  { \"name\": \"Morocco\", \"code\": \"MA\" },\r\n  { \"name\": \"Mozambique\", \"code\": \"MZ\" },\r\n  { \"name\": \"Myanmar\", \"code\": \"MM\" },\r\n  { \"name\": \"Namibia\", \"code\": \"NA\" },\r\n  { \"name\": \"Nauru\", \"code\": \"NR\" },\r\n  { \"name\": \"Nepal\", \"code\": \"NP\" },\r\n  { \"name\": \"Netherlands\", \"code\": \"NL\" },\r\n  { \"name\": \"Netherlands Antilles\", \"code\": \"AN\" },\r\n  { \"name\": \"New Caledonia\", \"code\": \"NC\" },\r\n  { \"name\": \"New Zealand\", \"code\": \"NZ\" },\r\n  { \"name\": \"Nicaragua\", \"code\": \"NI\" },\r\n  { \"name\": \"Niger\", \"code\": \"NE\" },\r\n  { \"name\": \"Nigeria\", \"code\": \"NG\" },\r\n  { \"name\": \"Niue\", \"code\": \"NU\" },\r\n  { \"name\": \"Norfolk Island\", \"code\": \"NF\" },\r\n  { \"name\": \"Northern Mariana Islands\", \"code\": \"MP\" },\r\n  { \"name\": \"Norway\", \"code\": \"NO\" },\r\n  { \"name\": \"Oman\", \"code\": \"OM\" },\r\n  { \"name\": \"Pakistan\", \"code\": \"PK\" },\r\n  { \"name\": \"Palau\", \"code\": \"PW\" },\r\n  { \"name\": \"Palestinian Territory, Occupied\", \"code\": \"PS\" },\r\n  { \"name\": \"Panama\", \"code\": \"PA\" },\r\n  { \"name\": \"Papua New Guinea\", \"code\": \"PG\" },\r\n  { \"name\": \"Paraguay\", \"code\": \"PY\" },\r\n  { \"name\": \"Peru\", \"code\": \"PE\" },\r\n  { \"name\": \"Philippines\", \"code\": \"PH\" },\r\n  { \"name\": \"Pitcairn Islands\", \"code\": \"PN\" },\r\n  { \"name\": \"Poland\", \"code\": \"PL\" },\r\n  { \"name\": \"Portugal\", \"code\": \"PT\" },\r\n  { \"name\": \"Puerto Rico\", \"code\": \"PR\" },\r\n  { \"name\": \"Qatar\", \"code\": \"QA\" },\r\n  { \"name\": \"Reunion\", \"code\": \"RE\" },\r\n  { \"name\": \"Romania\", \"code\": \"RO\" },\r\n  { \"name\": \"Russian Federation\", \"code\": \"RU\" },\r\n  { \"name\": \"Rwanda\", \"code\": \"RW\" },\r\n  { \"name\": \"Saint Helena\", \"code\": \"SH\" },\r\n  { \"name\": \"Saint Kitts and Nevis\", \"code\": \"KN\" },\r\n  { \"name\": \"Saint Lucia\", \"code\": \"LC\" },\r\n  { \"name\": \"Saint Pierre and Miquelon\", \"code\": \"PM\" },\r\n  { \"name\": \"Saint Vincent and the Grenadines\", \"code\": \"VC\" },\r\n  { \"name\": \"Samoa\", \"code\": \"WS\" },\r\n  { \"name\": \"San Marino\", \"code\": \"SM\" },\r\n  { \"name\": \"Sao Tome and Principe\", \"code\": \"ST\" },\r\n  { \"name\": \"Saudi Arabia\", \"code\": \"SA\" },\r\n  { \"name\": \"Senegal\", \"code\": \"SN\" },\r\n  { \"name\": \"Serbia and Montenegro\", \"code\": \"CS\" },\r\n  { \"name\": \"Seychelles\", \"code\": \"SC\" },\r\n  { \"name\": \"Sierra Leone\", \"code\": \"SL\" },\r\n  { \"name\": \"Singapore\", \"code\": \"SG\" },\r\n  { \"name\": \"Slovakia\", \"code\": \"SK\" },\r\n  { \"name\": \"Slovenia\", \"code\": \"SI\" },\r\n  { \"name\": \"Solomon Islands\", \"code\": \"SB\" },\r\n  { \"name\": \"Somalia\", \"code\": \"SO\" },\r\n  { \"name\": \"South Africa\", \"code\": \"ZA\" },\r\n  { \"name\": \"South Georgia and the South Sandwich Islands\", \"code\": \"GS\" },\r\n  { \"name\": \"Spain\", \"code\": \"ES\" },\r\n  { \"name\": \"Sri Lanka\", \"code\": \"LK\" },\r\n  { \"name\": \"Sudan\", \"code\": \"SD\" },\r\n  { \"name\": \"Suriname\", \"code\": \"SR\" },\r\n  { \"name\": \"Svalbard and Jan Mayen\", \"code\": \"SJ\" },\r\n  { \"name\": \"Swaziland\", \"code\": \"SZ\" },\r\n  { \"name\": \"Sweden\", \"code\": \"SE\" },\r\n  { \"name\": \"Switzerland\", \"code\": \"CH\" },\r\n  { \"name\": \"Syrian Arab Republic\", \"code\": \"SY\" },\r\n  { \"name\": \"Taiwan\", \"code\": \"TW\" },\r\n  { \"name\": \"Tajikistan\", \"code\": \"TJ\" },\r\n  { \"name\": \"Tanzania, United Republic of\", \"code\": \"TZ\" },\r\n  { \"name\": \"Thailand\", \"code\": \"TH\" },\r\n  { \"name\": \"Timor-Leste\", \"code\": \"TL\" },\r\n  { \"name\": \"Togo\", \"code\": \"TG\" },\r\n  { \"name\": \"Tokelau\", \"code\": \"TK\" },\r\n  { \"name\": \"Tonga\", \"code\": \"TO\" },\r\n  { \"name\": \"Trinidad and Tobago\", \"code\": \"TT\" },\r\n  { \"name\": \"Tunisia\", \"code\": \"TN\" },\r\n  { \"name\": \"Turkey\", \"code\": \"TR\" },\r\n  { \"name\": \"Turkmenistan\", \"code\": \"TM\" },\r\n  { \"name\": \"Turks and Caicos Islands\", \"code\": \"TC\" },\r\n  { \"name\": \"Tuvalu\", \"code\": \"TV\" },\r\n  { \"name\": \"Uganda\", \"code\": \"UG\" },\r\n  { \"name\": \"Ukraine\", \"code\": \"UA\" },\r\n  { \"name\": \"United Arab Emirates\", \"code\": \"AE\" },\r\n  { \"name\": \"United Kingdom\", \"code\": \"GB\" },\r\n  { \"name\": \"United States\", \"code\": \"US\" },\r\n  { \"name\": \"United States Minor Outlying Islands\", \"code\": \"UM\" },\r\n  { \"name\": \"Uruguay\", \"code\": \"UY\" },\r\n  { \"name\": \"Uzbekistan\", \"code\": \"UZ\" },\r\n  { \"name\": \"Vanuatu\", \"code\": \"VU\" },\r\n  { \"name\": \"Venezuela\", \"code\": \"VE\" },\r\n  { \"name\": \"Vietnam\", \"code\": \"VN\" },\r\n  { \"name\": \"Virgin Islands, British\", \"code\": \"VG\" },\r\n  { \"name\": \"Virgin Islands, U.S.\", \"code\": \"VI\" },\r\n  { \"name\": \"Wallis and Futuna\", \"code\": \"WF\" },\r\n  { \"name\": \"Western Sahara\", \"code\": \"EH\" },\r\n  { \"name\": \"Yemen\", \"code\": \"YE\" },\r\n  { \"name\": \"Zambia\", \"code\": \"ZM\" },\r\n  { \"name\": \"Zimbabwe\", \"code\": \"ZN\" }\r\n]", "import { Accomplishment } from \"~/types.client\";\r\n\r\nexport default function AccomplishmentCard({\r\n  accomplishment,\r\n}: {\r\n  accomplishment: Accomplishment\r\n}) {\r\n  return (\r\n    <div className=\"flex flex-col border-[1px] border-gray-600 bg-gray-300 rounded-lg p-5\">\r\n      <div className=\"flex flex-col mt-5\">\r\n        <div className=\"flex text-sm bg-black p-2 text-white w-auto\">\r\n          {accomplishment.type}\r\n        </div>\r\n        <div className=\"text-sm\">\r\n          {accomplishment.category}\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"font-bold text-lg\">\r\n            {accomplishment.title}\r\n          </div>\r\n          {\r\n            accomplishment.publisher && <div className=\"text-sm\">\r\n              {accomplishment.publisher}\r\n            </div>\r\n          }\r\n          {\r\n            accomplishment.organization && <div className=\"text-sm\">\r\n              {accomplishment.organization}\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}", "import { Degree } from \"~/types.client\";\r\nimport AccomplishmentCard from \"./AccomplishmentCard\";\r\n\r\nexport default function DegreeCard({ degree }: { degree: Degree }) {\r\n  return (\r\n    <div className=\"mb-4 border-gray-500 border-solid rounded-md p-5 border-2\">\r\n      <h2 className=\"text-2xl font-bold\">{degree.level}</h2>\r\n      <h3 className=\"text-lg font-bold\">{degree.major}</h3>\r\n      <h3 className=\"text-lg font-bold\">{degree.country}</h3>\r\n      <h3 className=\"text-lg font-bold\">{degree.school}</h3>\r\n      <h3 className=\"text-lg font-bold\">{degree.startYear}</h3>\r\n      <h3 className=\"text-lg font-bold\">{degree.startMonth}</h3>\r\n      <h3 className=\"text-lg font-bold\">{degree.stateOrCity}</h3>\r\n      {\r\n        degree.accomplishments.map((accomplishment) => (\r\n          <AccomplishmentCard accomplishment={accomplishment} />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}", "\r\nimport { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useActionData, useFetcher, useLoaderData, useSearchParams } from \"@remix-run/react\"\r\nimport { useEffect, useState } from \"react\";\r\nimport assessmentFormats from \"~/assets/data/assessmentFormats\";\r\nimport countries from \"~/assets/data/countries\";\r\nimport months from \"~/assets/data/months\";\r\nimport years from \"~/assets/data/years\";\r\nimport yesNos from \"~/assets/data/yesNos\";\r\nimport AccomplishmentCard from \"~/components/AccomplishmentCard\";\r\nimport AccomplishmentForm from \"~/components/AccomplishmentForm\";\r\nimport DegreeCard from \"~/components/DegreeCard\";\r\nimport LabelledDropdown from \"~/components/LabelledDropdown\"\r\nimport LabelledTextInput from \"~/components/LabelledInput\"\r\nimport { prisma } from \"~/db.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { Accomplishment } from \"~/types.client\";\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const body = await request.formData();\r\n  const actionType = body.get('action')\r\n  if (actionType === 'addDegree') {\r\n    const newDegree = await prisma.degree.create({\r\n      data: {\r\n        level: '',\r\n        major: '',\r\n        school: '',\r\n        userId: await requireUserId(request),\r\n        isTemp: true\r\n      }\r\n    })\r\n    return json({\r\n      newDegree\r\n    })\r\n  } else if (actionType === 'saveDegree') {\r\n    const dataToUpdate = {\r\n      level: body.get('type') as string,\r\n      major: body.get('major') as string,\r\n      school: body.get('school') as string,\r\n      country: body.get('country') as string,\r\n      stateOrCity: body.get('cityOrState') as string,\r\n      startYear: parseInt(body.get('startYear') as string),\r\n      startMonth: parseInt(body.get('startMonth') as string),\r\n      endYear: parseInt(body.get('endYear') as string),\r\n      endMonth: parseInt(body.get('endMonth') as string),\r\n      assessmentFormat: body.get('assessmentFormat') as string,\r\n      grade: body.get('grade') as string,\r\n      hasEca: body.get('hasEca') as string === 'Yes' ? true : false,\r\n      ecaAuthority: body.get('ecaAuthority') as string,\r\n      isTemp: false\r\n    }\r\n    console.log(dataToUpdate)\r\n    await prisma.degree.update({\r\n      where: {\r\n        id: body.get('degreeId') as string\r\n      },\r\n      data: dataToUpdate\r\n    })\r\n    return redirect('/profile/degrees')\r\n  } else {\r\n    throw new Error('Invalid action type')\r\n  }\r\n}\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request)\r\n  const degrees = await prisma.degree.findMany({\r\n    include: {\r\n      accomplishments: true\r\n    },\r\n    where: {\r\n      userId,\r\n      isTemp: false\r\n    }\r\n  })\r\n  return json({\r\n    degrees\r\n  });\r\n}\r\n\r\nexport default function EducationDegrees() {\r\n  const fetcher = useFetcher()\r\n  const { degrees } = useLoaderData<typeof loader>()\r\n  const [searchParams] = useSearchParams()\r\n  const [isAddingAccomplishment, setIsAddingAccomplishment] = useState(false)\r\n  const [isAddingDegree, setIsAddingDegree] = useState(false)\r\n  const [degreeBeingAdded, setDegreeBeingAdded] = useState(null)\r\n  const [accomplishmentsForDegreeBeingAdded, setAccomplishmentsForDegreeBeingAdded] = useState<Accomplishment[]>([])\r\n\r\n  console.log(fetcher.data)\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('addAccomplishment')) {\r\n      setIsAddingAccomplishment(true)\r\n    }\r\n  }, [searchParams])\r\n  useEffect(() => {\r\n    setIsAddingDegree(fetcher.data?.newDegree?.id ? true : false)\r\n    setDegreeBeingAdded(fetcher.data?.newDegree?.id)\r\n  }, [fetcher.data])\r\n\r\n  return (\r\n    <section>\r\n      {\r\n        degrees.map(degree => <DegreeCard key={degree.id} degree={degree} />)\r\n      }\r\n      {\r\n        isAddingDegree && <fetcher.Form action=\"/profile/degrees\" method=\"post\" className=\"p-5\">\r\n          <input name=\"degreeId\" type=\"hidden\" value={fetcher.data?.newDegree.id} />\r\n          <LabelledDropdown\r\n            name=\"type\"\r\n            label=\"Degree\"\r\n            options={[\r\n              { value: \"UG Diploma\", label: \"UG Diploma\", name: \"UG Diploma\" },\r\n              { value: \"Bachelors\", label: \"Bachelors\", name: \"Bachelors\" },\r\n              { value: \"PG Diploma\", label: \"PG Diploma\", name: \"PG Diploma\" },\r\n              { value: \"Professional Degree\", label: \"Professional Degree\", name: \"Professional Degree\" },\r\n              { value: \"Masters\", label: \"Masters\", name: \"Masters\" },\r\n              { value: \"PhD or Doctoral Studies\", label: \"PhD or Doctoral Studies\", name: \"PhD or Doctoral Studies\" },\r\n            ]}\r\n            className=\"w-full\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"school\"\r\n            label=\"University/College\"\r\n            placeholder=\"Enter the name of your university/college\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"major\"\r\n            label=\"Subject/Major\"\r\n            placeholder=\"Enter your field of study\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledDropdown\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            options={countries.map(country => ({ value: country.code, label: country.name, name: country.name }))}\r\n            className=\"w-full mt-5\"\r\n            placeholder=\"Select Country\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"cityOrState\"\r\n            label=\"City/State\"\r\n            placeholder=\"Enter the city/state of your university/college\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <div className=\"flex flex-wrap mt-5 gap-5\">\r\n            <label className=\"w-full mb-2 font-bold text-md text-gray-700\">\r\n              Started\r\n            </label>\r\n            <LabelledDropdown\r\n              name=\"startYear\"\r\n              placeholder=\"Year\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                years.map(year => ({ value: year.toString(), label: year.toString(), name: year.toString() }))\r\n              }\r\n            />\r\n            <LabelledDropdown\r\n              name=\"startMonth\"\r\n              placeholder=\"Month\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                months.map(month => ({ value: month.id, label: month.name, name: month.name }))\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-wrap mt-5 gap-5\">\r\n            <label className=\"w-full mb-2 font-bold text-md text-gray-700\">\r\n              Ended\r\n            </label>\r\n            <LabelledDropdown\r\n              name=\"endYear\"\r\n              placeholder=\"Year\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                Array.from({ length: 50 }, (_, i) => i + 1970).map(year => ({ value: year.toString(), label: year.toString(), name: year.toString() }))\r\n              }\r\n            />\r\n            <LabelledDropdown\r\n              name=\"endMonth\"\r\n              placeholder=\"Month\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                months.map(month => ({ value: month.id, label: month.name, name: month.name }))\r\n              }\r\n            />\r\n          </div>\r\n          <LabelledDropdown\r\n            name=\"assessmentFormat\"\r\n            label=\"Assessment Format\"\r\n            placeholder=\"Choose the format of your assessment\"\r\n            className=\"w-full mt-5\"\r\n            options={\r\n              assessmentFormats.map(format => ({ value: format, label: format, name: format }))\r\n            }\r\n          />\r\n          <LabelledTextInput\r\n            name=\"grade\"\r\n            label=\"Marks/Grade\"\r\n            placeholder=\"Enter your final marks/grade\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledDropdown\r\n            name=\"hasEca\"\r\n            label=\"Do you have an ECA Certificate?\"\r\n            className=\"w-full mt-5\"\r\n            options={\r\n              yesNos.map(yesNo => ({ value: yesNo, label: yesNo, name: yesNo }))\r\n            }\r\n          />\r\n          <LabelledTextInput\r\n            name=\"ecaAuthority\"\r\n            label=\"ECA Authority\"\r\n            placeholder=\"Enter the name of the authority that issued your ECA certificate\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          {\r\n            accomplishmentsForDegreeBeingAdded.map(accomplishment => <AccomplishmentCard key={accomplishment.id} accomplishment={accomplishment} />)\r\n          }\r\n          <button type=\"button\" onClick={() => setIsAddingAccomplishment(true)} className=\"mt-5 text-blue-500\">Add Accomplishment</button>\r\n          <input name=\"action\" type=\"hidden\" value=\"saveDegree\" />\r\n          <button type=\"submit\" className=\"flex mt-5 bg-blue-500 text-white px-5 py-2 rounded-md\">Save</button>\r\n        </fetcher.Form>\r\n      }\r\n      {\r\n        <fetcher.Form action=\"/profile/degrees\" method=\"post\">\r\n          <input name=\"action\" type=\"hidden\" value=\"addDegree\" />\r\n          <button type=\"submit\" className=\"flex mt-5 bg-blue-500 text-white px-5 py-2 rounded-md\" disabled={isAddingDegree}>Add Degree</button>\r\n        </fetcher.Form>\r\n      }\r\n      {\r\n        degreeBeingAdded && <AccomplishmentForm action={`/profile/degrees/${degreeBeingAdded}`} open={isAddingAccomplishment} setOpen={setIsAddingAccomplishment} onSubmit={(accomplishments) => {\r\n          setAccomplishmentsForDegreeBeingAdded(accomplishments)\r\n        }} />\r\n      }\r\n    </section>\r\n  )\r\n}", "export default [\r\n  \"Not Applicable\",\r\n  \"Percentage\",\r\n  \"Percentile\",\r\n  \"GPA\",\r\n  \"CGPA\",\r\n  \"Letter Grades\",\r\n  \"Bologna Process\",\r\n  \"Narrative Assessment\",\r\n  \"Other\"\r\n]", "export default [\r\n  {\r\n    \"id\": \"1\",\r\n    \"name\": \"January\",\r\n    \"shortName\": \"Jan\",\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"name\": \"February\",\r\n    \"shortName\": \"Feb\",\r\n  },\r\n  {\r\n    \"id\": \"3\",\r\n    \"name\": \"March\",\r\n    \"shortName\": \"Mar\",\r\n  },\r\n  {\r\n    \"id\": \"4\",\r\n    \"name\": \"April\",\r\n    \"shortName\": \"Apr\",\r\n  },\r\n  {\r\n    \"id\": \"5\",\r\n    \"name\": \"May\",\r\n    \"shortName\": \"May\",\r\n  },\r\n  {\r\n    \"id\": \"6\",\r\n    \"name\": \"June\",\r\n    \"shortName\": \"Jun\",\r\n  },\r\n  {\r\n    \"id\": \"7\",\r\n    \"name\": \"July\",\r\n    \"shortName\": \"Jul\",\r\n  },\r\n  {\r\n    \"id\": \"8\",\r\n    \"name\": \"August\",\r\n    \"shortName\": \"Aug\",\r\n  },\r\n  {\r\n    \"id\": \"9\",\r\n    \"name\": \"September\",\r\n    \"shortName\": \"Sep\",\r\n  },\r\n  {\r\n    \"id\": \"10\",\r\n    \"name\": \"October\",\r\n    \"shortName\": \"Oct\",\r\n  },\r\n  {\r\n    \"id\": \"11\",\r\n    \"name\": \"November\",\r\n    \"shortName\": \"Nov\",\r\n  },\r\n  {\r\n    \"id\": \"12\",\r\n    \"name\": \"December\",\r\n    \"shortName\": \"Dec\",\r\n  },\r\n]", "export default Array.from(\r\n  { length: 50 }, (_, i) => new Date().getFullYear() - i\r\n)", "export default [\r\n  \"Yes\",\r\n  \"No\",\r\n]", "import { useFetcher } from \"@remix-run/react\"\r\nimport LabelledDropdown from \"./LabelledDropdown\"\r\nimport { useEffect, useState } from \"react\"\r\nimport LabelledTextInput from \"./LabelledInput\"\r\nimport { Dialog } from \"@headlessui/react\"\r\nimport { Accomplishment } from \"~/types.client\"\r\n\r\nexport default function AccomplishmentForm({\r\n  action,\r\n  open,\r\n  setOpen,\r\n  onSubmit\r\n}: {\r\n  action: string\r\n  open: boolean\r\n  setOpen: (value: boolean) => void\r\n  onSubmit: (data: Accomplishment[]) => void\r\n}) {\r\n  const fetcher = useFetcher()\r\n  const [type, setType] = useState('Not selected')\r\n  useEffect(() => {\r\n    if (fetcher.data) {\r\n      onSubmit(fetcher.data.accomplishments)\r\n      setOpen(false)\r\n    }\r\n  }, [fetcher.data])\r\n  return (\r\n    <Dialog open={open} onClose={() => setOpen(false)} >\r\n      <div className=\"fixed inset-0 bg-black/30 z-[100]\" aria-hidden=\"true\" />\r\n      <div className=\"fixed inset-0 overflow-y-auto z-[100]\">\r\n        <div className=\"flex min-h-full items-center justify-center p-4\">\r\n          <Dialog.Panel className='bg-white border-2 rounded-sm border-black p-10 w-1/2'>\r\n            <fetcher.Form action={action} method=\"post\">\r\n              <input name=\"action\" type=\"hidden\" value=\"addAccomplishment\" />\r\n              <LabelledDropdown\r\n                name=\"type\"\r\n                label=\"Select Accomplishment Type\"\r\n                options={[\r\n                  { value: \"Not selected\", label: \"Please select the type of accomplishment\", name: \"Not selected\" },\r\n                  { value: \"Research Publication\", label: \"Research Publication\", name: \"Research Publication\" },\r\n                  { value: \"Patent\", label: \"Innovation Patent\", name: \"Patent\" },\r\n                  { value: \"Research Grant or Academic Award\", label: \"Research Grant or Academic Award\", name: \"Research Grant or Academic Award\" },\r\n                  { value: \"Professional Award\", label: \"Professional Award\", name: \"Professional Award\" },\r\n                  { value: \"Conference Presentation\", label: \"Conference Presentation\", name: \"Conference Presentation\" },\r\n                  { value: \"Media Coverage\", label: \"Media Coverage\", name: \"Media Coverage\" },\r\n                  { value: \"Internship\", label: \"Internship\", name: \"Internship\" },\r\n                ]}\r\n                className=\"w-full\"\r\n                onChange={(value) => setType(value)}\r\n              />\r\n              {\r\n                type === 'Research Publication' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"title\"\r\n                      label=\"Title\"\r\n                      placeholder=\"Enter the title of your publication\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"publisher\"\r\n                      label=\"Publisher\"\r\n                      placeholder=\"Enter the name of the publisher\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"details\"\r\n                      label=\"Major Findings\"\r\n                      multiline={true}\r\n                      placeholder=\"Enter the major findings of your publication\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link to your publication\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Patent' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"title\"\r\n                      label=\"Title\"\r\n                      placeholder=\"Enter the title of your patent\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledDropdown\r\n                      name=\"status\"\r\n                      label=\"Status\"\r\n                      options={[\r\n                        { value: \"Filed\", label: \"Filed\", name: \"Filed\" },\r\n                        { value: \"Accepted\", label: \"Accepted\", name: \"Accepted\" },\r\n                      ]}\r\n                      placeholder=\"Select the status of your patent\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledDropdown\r\n                      name=\"category\"\r\n                      label=\"Type\"\r\n                      options={[\r\n                        { value: \"National\", label: \"National\", name: \"National\" },\r\n                        { value: \"International\", label: \"International\", name: \"International\" },\r\n                      ]}\r\n                      placeholder=\"Select the type of your patent\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link to your patent\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Research Grant or Academic Award' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"title\"\r\n                      label=\"Name\"\r\n                      placeholder=\"Name of the award/grant\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"organization\"\r\n                      label=\"Awarded By\"\r\n                      placeholder=\"Name of the person/organization that awarded you\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"details\"\r\n                      label=\"Reason\"\r\n                      placeholder=\"Why were you awarded this grant/award?\"\r\n                      multiline={true}\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link (if any) to your grant/award\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Conference Presentation' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"title\"\r\n                      label=\"Conference Name/Year\"\r\n                      placeholder=\"Name of the conference and the year of presentation\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"organization\"\r\n                      label=\"Organized By\"\r\n                      placeholder=\"Name of the organizer\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledDropdown\r\n                      name=\"category\"\r\n                      label=\"Purpose\"\r\n                      options={[\r\n                        { value: \"Attendance\", label: \"Attendance\", name: \"Attendance\" },\r\n                        { value: \"Poster Presentation\", label: \"Poster Presentation\", name: \"Poster Presentation\" },\r\n                        { value: \"Oral Presentation\", label: \"Oral Presentation\", name: \"Oral Presentation\" },\r\n                      ]}\r\n                      placeholder=\"Select the purpose of your attendance\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link (if any) to your conference presentation\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Internship' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"objective\"\r\n                      label=\"Objective\"\r\n                      placeholder=\"What was the objective of your internship?\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"organization\"\r\n                      label=\"Organization\"\r\n                      placeholder=\"Name of the organization you interned at\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"details\"\r\n                      label=\"Findings\"\r\n                      placeholder=\"What were your major findings during the internship\"\r\n                      multiline={true}\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link (if any) to your work/certificate\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Professional Award' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"title\"\r\n                      label=\"Name\"\r\n                      placeholder=\"Name of the award/grant\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"organization\"\r\n                      label=\"Awarding Body\"\r\n                      placeholder=\"Name of the person/organization that awarded you\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"details\"\r\n                      label=\"Reason\"\r\n                      placeholder=\"Why were you awarded this grant/award?\"\r\n                      multiline={true}\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link (if any) to your grant/award\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                type === 'Media Coverage' && (\r\n                  <>\r\n                    <LabelledTextInput\r\n                      name=\"details\"\r\n                      label=\"Description\"\r\n                      multiline={true}\r\n                      placeholder=\"Please provide a description of the media coverage\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"organization\"\r\n                      label=\"News Media\"\r\n                      placeholder=\"Name of the news media\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledDropdown\r\n                      name=\"category\"\r\n                      label=\"Coverage Type\"\r\n                      options={[\r\n                        { value: \"International News\", label: \"International News\", name: \"International News\" },\r\n                        { value: \"National News\", label: \"National News\", name: \"National News\" },\r\n                        { value: \"Regional News\", label: \"Regional News\", name: \"Regional News\" },\r\n                        { value: \"Online News\", label: \"Online News\", name: \"Online News\" },\r\n                      ]}\r\n                      placeholder=\"Select the type of coverage\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                    <LabelledTextInput\r\n                      name=\"link\"\r\n                      label=\"Link\"\r\n                      placeholder=\"Please provide a link (if any) to your work/certificate\"\r\n                      className=\"w-full mt-5\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              <div>\r\n                <button type=\"submit\" className=\"mt-5 bg-blue-500 border-blue-500 border-[1px] text-white px-5 py-2 rounded-md\">Save</button>\r\n                <button className=\"ml-2 mt-5 bg-white border-[1px] border-black px-5 py-2 rounded-md\" onClick={() => setOpen(false)}>Cancel</button>\r\n              </div>\r\n            </fetcher.Form>\r\n          </Dialog.Panel>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}", "import { cx } from \"~/utils\"\r\n\r\ntype Option = {\r\n  label: string\r\n  value: string\r\n  name: string\r\n}\r\n\r\nexport default function LabelledDropdown({\r\n  label,\r\n  name,\r\n  onChange,\r\n  options,\r\n  className,\r\n  placeholder\r\n}: {\r\n  label?: string\r\n  name: string\r\n  onChange?: (value: string) => void\r\n  options: Option[]\r\n  className?: string\r\n  placeholder?: string\r\n}) {\r\n  return (\r\n    <div className={className}>\r\n      {\r\n        label &&\r\n        <label className=\"block mb-2 font-bold text-md text-gray-700\">\r\n          {label}\r\n        </label>\r\n      }\r\n      <select\r\n        name={name}\r\n        onChange={(e) => onChange ? onChange(e.target.value) : null}\r\n        className=\"w-full p-3 border-[1px] border-black rounded-sm focus:outline-none focus:border-2\"\r\n      >\r\n        {\r\n          placeholder && (\r\n            <option value=\"None\">{placeholder}</option>\r\n          )\r\n        }\r\n        {options.map((option) => (\r\n          <option key={option.name} value={option.value}>{option.label}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}", "export default function LabelledTextInput({\r\n  label,\r\n  name,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  ref,\r\n  className,\r\n  multiline,\r\n}: {\r\n  label?: string\r\n  name: string\r\n  onChange?: (value: string) => void\r\n  placeholder?: string\r\n  value?: string\r\n  ref?: any\r\n  className?: string\r\n  multiline?: boolean\r\n}) {\r\n  return (\r\n    <div className={className}>\r\n      {label &&\r\n        <label className=\"block mb-2 font-bold text-md text-gray-700\">\r\n          {label}\r\n        </label>\r\n      }\r\n      {multiline === true ?\r\n        <textarea\r\n          name={name}\r\n          onChange={(e) => onChange ? onChange(e.target.value) : null}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          ref={ref}\r\n          className=\"w-full p-3 border-[1px] border-black rounded-sm focus:outline-none focus:border-2\"\r\n        />\r\n        : <input\r\n          name={name}\r\n          type=\"text\"\r\n          onChange={(e) => onChange ? onChange(e.target.value) : null}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          ref={ref}\r\n          className=\"w-full p-3 border-[1px] border-black rounded-sm focus:outline-none focus:border-2\"\r\n        />}\r\n    </div>\r\n  )\r\n}", "export default function TermsAndConditionsPage() {\r\n  return (\r\n    <div className=\"p-10\">\r\n      <h1 className=\"font-bold text-2xl text-center mb-10\">Terms and Conditions</h1>\r\n      <p>Welcome to <a href=\"https://www.biosolver.io\">www.biosolver.io</a> (\u201CSite\u201D). By using our Site, you agree to these terms and conditions (\u201CTerms of Service\u201D or \u201CAgreement\u201D) as a legally binding agreement between you and us. Please read these Terms of Service carefully before accessing or using our Site.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Eligibility</h2>\r\n      <p>You must be 18 years or older to use our Site. By accessing or using our Site, you represent and warrant that you are 18 years of age or older and that you have the legal capacity to enter into this Agreement.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Services</h2>\r\n      <p>Our Site provides a platform for biotechnology freelancers (\u201CSolvers\u201D) to connect with potential clients (\u201CSeekers\u201D) who need their services. We do provide optional and additional services other than the platform for connecting Solvers and Seekers.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Registration</h2>\r\n      <p>To use our Site as a Solver or Seeker, you must register and create an account. You must provide accurate, current, and complete information during the registration process and keep your account information up to date.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Use of the Site</h2>\r\n      <p>You agree to use our Site only for lawful purposes and in accordance with these Terms of Service. You agree not to use our Site:</p>\r\n      <ul>\r\n        <li>In any way that violates any applicable federal, state, local, or international law or regulation</li>\r\n        <li>For the purpose of exploiting, harming, or attempting to exploit or harm minors in any way by exposing them to inappropriate content, asking for personally identifiable information, or otherwise</li>\r\n        <li>To transmit, or procure the sending of, any advertising or promotional material, including any \u201Cjunk mail,\u201D \u201Cchain letter,\u201D \u201Cspam,\u201D or any other similar solicitation</li>\r\n        <li>To impersonate or attempt to impersonate the Company, a Company employee, another user, or any other person or entity</li>\r\n        <li>To engage in any other conduct that restricts or inhibits anyone\u2019s use or enjoyment of the Site, or which, as determined by us, may harm the Company or users of the Site, or expose them to liability</li>\r\n      </ul>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Fees and Payment</h2>\r\n      <p>We do not charge any fees for using our Site. Freelancers and Clients agree to settle all financial transactions for services performed through our Site.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Intellectual Property Rights</h2>\r\n      <p>The content, features, and functionality of our Site are owned by us or our licensors and are protected by copyright, trademark, and other intellectual property laws. You agree not to reproduce, distribute, modify, create derivative works of, publicly display, publicly perform, republish, download, store, or transmit any of the material on our Site, except as follows:</p>\r\n      <ul>\r\n        <li>Your computer may temporarily store copies of such materials in RAM incidental to your accessing and viewing those materials</li>\r\n        <li>You may store files that are automatically cached by your Web browser for display enhancement purposes</li>\r\n      </ul>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Disclaimer of Warranties</h2>\r\n      <p>OUR SITE IS PROVIDED ON AN \u201CAS IS\u201D AND \u201CAS AVAILABLE\u201D BASIS, WITHOUT ANY WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. WE DISCLAIM ALL WARRANTIES, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. WE DO NOT WARRANT THAT OUR SITE WILL BE UNINTERRUPTED OR ERROR-FREE, THAT DEFECTS WILL BE CORRECTED, OR THAT OUR SITE OR THE SERVER THAT MAKES IT AVAILABLE ARE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. WE MAKE NO REPRESENTATIONS OR WARRANTIES ABOUT THE ACCURACY, RELIABILITY, COMPLETENESS, OR TIMELINESS OF THE CONTENT OR SERVICES PROVIDED ON OUR SITE.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Limitation of Liability</h2>\r\n      <p>IN NO EVENT WILL WE, OUR AFFILIATES, OR OUR LICENSORS BE LIABLE FOR DAMAGES OF ANY KIND (INCLUDING, BUT NOT LIMITED TO, DIRECT, INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR PUNITIVE DAMAGES) ARISING FROM THE USE OF, OR INABILITY TO USE, OUR SITE, INCLUDING, BUT NOT LIMITED TO, ANY ERRORS OR OMISSIONS IN ANY CONTENT, OR ANY LOSS OR DAMAGE OF ANY KIND INCURRED AS A RESULT OF THE USE OF ANY CONTENT (OR PRODUCT) POSTED, TRANSMITTED, OR OTHERWISE MADE AVAILABLE VIA THE SITE, EVEN IF ADVISED OF THEIR POSSIBILITY. BECAUSE SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR THE LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, IN SUCH STATES OR JURISDICTIONS, OUR LIABILITY SHALL BE LIMITED TO THE MAXIMUM EXTENT PERMITTED BY LAW.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Indemnification</h2>\r\n      <p>You agree to indemnify, defend, and hold harmless us, our affiliates, licensors, and service providers, and our and their respective officers, directors, employees, contractors, agents, licensors, suppliers, successors, and assigns from and against any claims, liabilities, damages, judgments, awards, losses, costs, expenses, or fees (including reasonable attorneys\u2019 fees) arising out of or relating to your violation of these Terms of Service or your use of our Site, including, but not limited to, any use of our Site\u2019s content, services, and products other than as expressly authorized in these Terms of Service or your use of any information obtained from our Site.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Termination</h2>\r\n      <p>We may terminate your access to all or any part of our Site at any time, with or without cause, with or without notice, effective immediately. If you wish to terminate this Agreement, you may simply discontinue using our Site.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Governing Law and Jurisdiction</h2>\r\n      <p>These Terms of Service and any disputes or claims arising out of or in connection with them or their subject matter or formation (including non-contractual disputes or claims) shall be governed by and construed in accordance with the laws of the Province of Ontario and the federal laws of Canada applicable therein without giving effect to any choice or conflict of law provision or rule. Any legal suit, action or proceeding arising out of, or related to, these Terms of Service or our Site shall be instituted exclusively in the courts of the Province of Ontario although we retain the right to bring any suit, action, or proceeding against you for breach of these Terms of Service in your country of residence or any other relevant country. You waive any and all objections to the exercise of jurisdiction over you by such courts and to venue in such courts.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Entire Agreement</h2>\r\n      <p>These Terms of Service, our Privacy Policy, and any additional terms to which you agree when using particular elements of our Site, constitute the sole and entire agreement between you and us regarding our Site and supersede all prior and contemporaneous understandings, agreements, representations, and warranties, both written and oral, regarding our Site.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Changes to Terms of Service</h2>\r\n      <p>We may modify or update these Terms of Service from time to time, and the most current version will be posted on our Site. Your continued use of our Site after we post any modifications to the Terms of Service on this page will constitute your acknowledgment of the modifications and your consent to abide and be bound by the modified Terms of Service.</p>\r\n    </div>\r\n  )\r\n}", "import { z } from 'zod'\r\n\r\nconst schema = z.object({\r\n  type: z.string(),\r\n  field: z.string(),\r\n  country: z.string(),\r\n  university: z.string(),\r\n  accomplishments: z.array(z.object({\r\n    name: z.string(),\r\n    type: z.string(),\r\n    certificate: z.string(),\r\n    link: z.string(),\r\n    id: z.string(),\r\n    publisher: z.string(),\r\n    title: z.string(),\r\n  })),\r\n})\r\n\r\nimport { makeDomainFunction } from 'domain-functions'\r\n\r\nconst mutation = makeDomainFunction(schema)(async (values) => (\r\n  console.log(values) /* or anything else, like saveMyValues(values) */\r\n))\r\n\r\nimport { formAction } from '~/form-action.server' /* path to your custom formAction */\r\nimport { ActionFunction } from '@remix-run/node'\r\n\r\nexport const action: ActionFunction = async ({ request }) =>\r\n  formAction({\r\n    request,\r\n    schema,\r\n    mutation,\r\n    successPath: '/success', /* path to redirect on success */\r\n  })\r\n\r\nimport { Form } from '~/form' /* path to your custom Form */\r\nimport countries from '~/assets/data/countries'\r\nimport { useRef } from 'react'\r\n\r\nexport default () => {\r\n  const accomplishmentTitleRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentTypeRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentCertificateRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentLinkRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentIdRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentPublisherRef = useRef<HTMLInputElement>(null)\r\n  const accomplishmentNameRef = useRef<HTMLInputElement>(null)\r\n\r\n  return (\r\n    <Form schema={schema} values={{ accomplishments: [] }}>\r\n      {\r\n        ({ Field, Errors, Button, watch, setValue }) => {\r\n          const accomplishments = watch('accomplishments')\r\n\r\n          return (\r\n            <>\r\n              <Field name=\"type\" label=\"First name\" />\r\n              <Field name=\"field\">\r\n                {({ Label, SmartInput, Errors }) => (\r\n                  <>\r\n                    <Label>E-mail</Label>\r\n                    <em>You'll hear from us at this address \uD83D\uDC47\uD83C\uDFFD</em>\r\n                    <SmartInput />\r\n                    <Errors />\r\n                  </>\r\n                )}\r\n              </Field>\r\n              <Field name=\"country\" type='select' options={countries.map(country => {\r\n                return {\r\n                  label: country.name,\r\n                  name: country.name,\r\n                  value: country.code,\r\n                }\r\n              })} />\r\n              <Field name=\"university\" />\r\n              <Field name=\"accomplishments\">\r\n                {({ Label, Errors }) => (\r\n                  <>\r\n                    <Label />\r\n                    <fieldset className=\"gap-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Name\"\r\n                        ref={accomplishmentNameRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Type\"\r\n                        ref={accomplishmentTypeRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Certificate\"\r\n                        ref={accomplishmentCertificateRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Link\"\r\n                        ref={accomplishmentLinkRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Identifier\"\r\n                        ref={accomplishmentIdRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Publisher\"\r\n                        ref={accomplishmentPublisherRef}\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"block w-full rounded-md border-gray-300 text-gray-800\r\n                      shadow-sm focus:border-pink-500 focus:ring-pink-500 sm:text-sm\"\r\n                        placeholder=\"Title\"\r\n                        ref={accomplishmentTitleRef}\r\n                      />\r\n                      <button\r\n                        className=\"rounded-md bg-pink-500 px-4\"\r\n                        onClick={(event) => {\r\n                          event.preventDefault()\r\n\r\n                          const name = accomplishmentNameRef.current?.value\r\n                          const type = accomplishmentTypeRef.current?.value\r\n                          const link = accomplishmentTypeRef.current?.value || ''\r\n                          const publisher = accomplishmentTypeRef.current?.value || ''\r\n                          const id = accomplishmentTypeRef.current?.value || ''\r\n                          const title = accomplishmentTypeRef.current?.value || ''\r\n                          const certificate = accomplishmentTypeRef.current?.value || ''\r\n\r\n                          if (name && type) {\r\n                            setValue(\r\n                              'accomplishments',\r\n                              [...accomplishments, { name, type, link, publisher, id, title, certificate }],\r\n                              { shouldValidate: true },\r\n                            )\r\n                            accomplishmentNameRef.current.value = ''\r\n                            accomplishmentTypeRef.current.value = ''\r\n                          }\r\n                        }}\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </fieldset>\r\n                    {/* {accomplishments && (\r\n                      <section className=\"-ml-1 flex flex-wrap pt-1\">                        \r\n                        {accomplishments.map((accomplishment, index) => (\r\n                          <div key={index} className='w-full p-5 border-2 rounded-lg'>\r\n                            <span className=\"m-1 flex items-center rounded-md bg-pink-500 px-2 py-1 text-white\">\r\n                              <span className=\"flex-1\">\r\n                                {accomplishment.name} ({accomplishment.title})\r\n                              </span>\r\n                              <button\r\n                                className=\"ml-2 text-pink-700\"\r\n                                onClick={() => {\r\n                                  setValue(\r\n                                    'accomplishments',\r\n                                    accomplishments.filter(\r\n                                      ({ name }) => name !== accomplishment.name,\r\n                                    ),\r\n                                    { shouldValidate: true },\r\n                                  )\r\n                                }}\r\n                              >\r\n                                X\r\n                              </button>\r\n                            </span>                            \r\n                          </div>\r\n                        ))}\r\n                      </section>\r\n                    )} */}\r\n                    <Errors />\r\n                  </>\r\n                )}\r\n              </Field>\r\n              <Errors />\r\n              <Button />\r\n            </>\r\n          )\r\n        }\r\n      }\r\n    </Form>\r\n  )\r\n}", "import { createFormAction } from 'remix-forms'\r\n// For Remix, import it like this\r\nimport { redirect, json } from '@remix-run/node'\r\n\r\nconst formAction = createFormAction({ redirect, json })\r\n\r\nexport { formAction }", "import { createForm } from 'remix-forms'\r\n// For Remix, import it like this\r\nimport { Form as FrameworkForm, useActionData, useSubmit, useNavigation } from '@remix-run/react'\r\n\r\nconst Form = createForm({ component: FrameworkForm, useNavigation, useSubmit, useActionData })\r\n\r\nexport { Form }", "import ProfilePersonal from \"~/modules/profile/Personal\";\r\n\r\nexport default function () {\r\n  return (\r\n    <ProfilePersonal />\r\n  )\r\n}", "import { useForm } from 'react-hook-form';\r\n\r\nconst ProfilePersonal = () => {\r\n  const { register } = useForm()\r\n\r\n  return (\r\n    <form className='w-full max-w-6xl mx-auto p-10'>\r\n      <h2 className='text-2xl font-bold mb-4'>Personal Information</h2>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"fullName\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Full Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"fullName\"\r\n          {...register(\"fullName\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"email\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          {...register(\"email\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"phone\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Phone Number\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phone\"\r\n          {...register(\"phone\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"addressLine1\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Address Line 1\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"addressLine1\"\r\n          {...register(\"addressLine1\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"addressLine2\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Address Line 2\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"addressLine2\"\r\n          {...register(\"addressLine2\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"city\" className=\"block mb-2 font-medium text-gray-700\">\r\n          City\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          {...register(\"city\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"state\" className=\"block mb-2 font-medium text-gray-700\">\r\n          State\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"state\"\r\n          {...register(\"state\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"zip\" className=\"block mb-2 font-medium text-gray-700\">\r\n          ZIP\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"zip\"\r\n          {...register(\"zip\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Country\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"country\"\r\n          {...register(\"country\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"website\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Website\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"website\"\r\n          {...register(\"website\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"linkedin\" className=\"block mb-2 font-medium text-gray-700\">\r\n          LinkedIn\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"linkedin\"\r\n          {...register(\"linkedin\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"github\" className=\"block mb-2 font-medium text-gray-700\">\r\n          GitHub\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"github\"\r\n          {...register(\"github\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"twitter\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Twitter\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"twitter\"\r\n          {...register(\"twitter\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"bio\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Bio\r\n        </label>\r\n        <textarea\r\n          id=\"bio\"\r\n          {...register(\"bio\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"pronouns\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Pronouns\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"pronouns\"\r\n          {...register(\"pronouns\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"avatar\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Avatar\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"avatar\"\r\n          {...register(\"avatar\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"resume\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Resume\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"resume\"\r\n          {...register(\"resume\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"dateOfBirth\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Date of Birth\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"dateOfBirth\"\r\n          {...register(\"dateOfBirth\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProfilePersonal;", "\r\nimport { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useActionData, useFetcher, useLoaderData, useSearchParams } from \"@remix-run/react\"\r\nimport { useEffect, useState } from \"react\";\r\nimport assessmentFormats from \"~/assets/data/assessmentFormats\";\r\nimport countries from \"~/assets/data/countries\";\r\nimport months from \"~/assets/data/months\";\r\nimport years from \"~/assets/data/years\";\r\nimport yesNos from \"~/assets/data/yesNos\";\r\nimport AccomplishmentCard from \"~/components/AccomplishmentCard\";\r\nimport AccomplishmentForm from \"~/components/AccomplishmentForm\";\r\nimport DegreeCard from \"~/components/DegreeCard\";\r\nimport LabelledDropdown from \"~/components/LabelledDropdown\"\r\nimport LabelledTextInput from \"~/components/LabelledInput\"\r\nimport { prisma } from \"~/db.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { Accomplishment } from \"~/types.client\";\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const body = await request.formData();\r\n  const actionType = body.get('action')\r\n  if (actionType === 'addDegree') {\r\n    const newDegree = await prisma.degree.create({\r\n      data: {\r\n        level: '',\r\n        major: '',\r\n        school: '',\r\n        userId: await requireUserId(request),\r\n        isTemp: true\r\n      }\r\n    })\r\n    return json({\r\n      newDegree\r\n    })\r\n  } else if (actionType === 'saveDegree') {\r\n    const dataToUpdate = {\r\n      level: body.get('type') as string,\r\n      major: body.get('major') as string,\r\n      school: body.get('school') as string,\r\n      country: body.get('country') as string,\r\n      stateOrCity: body.get('cityOrState') as string,\r\n      startYear: parseInt(body.get('startYear') as string),\r\n      startMonth: parseInt(body.get('startMonth') as string),\r\n      endYear: parseInt(body.get('endYear') as string),\r\n      endMonth: parseInt(body.get('endMonth') as string),\r\n      assessmentFormat: body.get('assessmentFormat') as string,\r\n      grade: body.get('grade') as string,\r\n      hasEca: body.get('hasEca') as string === 'Yes' ? true : false,\r\n      ecaAuthority: body.get('ecaAuthority') as string,\r\n      isTemp: false\r\n    }\r\n    console.log(dataToUpdate)\r\n    await prisma.degree.update({\r\n      where: {\r\n        id: body.get('degreeId') as string\r\n      },\r\n      data: dataToUpdate\r\n    })\r\n    return redirect('/profile/degrees')\r\n  } else {\r\n    throw new Error('Invalid action type')\r\n  }\r\n}\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request)\r\n  const degrees = await prisma.degree.findMany({\r\n    include: {\r\n      accomplishments: true\r\n    },\r\n    where: {\r\n      userId,\r\n      isTemp: false\r\n    }\r\n  })\r\n  return json({\r\n    degrees\r\n  });\r\n}\r\n\r\nexport default function EducationDegrees() {\r\n  const fetcher = useFetcher()\r\n  const { degrees } = useLoaderData<typeof loader>()\r\n  const [searchParams] = useSearchParams()\r\n  const [isAddingAccomplishment, setIsAddingAccomplishment] = useState(false)\r\n  const [isAddingDegree, setIsAddingDegree] = useState(false)\r\n  const [degreeBeingAdded, setDegreeBeingAdded] = useState(null)\r\n  const [accomplishmentsForDegreeBeingAdded, setAccomplishmentsForDegreeBeingAdded] = useState<Accomplishment[]>([])\r\n\r\n  console.log(fetcher.data)\r\n\r\n  useEffect(() => {\r\n    if (searchParams.get('addAccomplishment')) {\r\n      setIsAddingAccomplishment(true)\r\n    }\r\n  }, [searchParams])\r\n  useEffect(() => {\r\n    setIsAddingDegree(fetcher.data?.newDegree?.id ? true : false)\r\n    setDegreeBeingAdded(fetcher.data?.newDegree?.id)\r\n  }, [fetcher.data])\r\n\r\n  return (\r\n    <section>\r\n      {\r\n        degrees.map(degree => <DegreeCard key={degree.id} degree={degree} />)\r\n      }\r\n      {\r\n        isAddingDegree && <fetcher.Form action=\"/profile/degrees\" method=\"post\" className=\"p-5\">\r\n          <input name=\"degreeId\" type=\"hidden\" value={fetcher.data?.newDegree.id} />\r\n          <LabelledDropdown\r\n            name=\"type\"\r\n            label=\"Degree\"\r\n            options={[\r\n              { value: \"UG Diploma\", label: \"UG Diploma\", name: \"UG Diploma\" },\r\n              { value: \"Bachelors\", label: \"Bachelors\", name: \"Bachelors\" },\r\n              { value: \"PG Diploma\", label: \"PG Diploma\", name: \"PG Diploma\" },\r\n              { value: \"Professional Degree\", label: \"Professional Degree\", name: \"Professional Degree\" },\r\n              { value: \"Masters\", label: \"Masters\", name: \"Masters\" },\r\n              { value: \"PhD or Doctoral Studies\", label: \"PhD or Doctoral Studies\", name: \"PhD or Doctoral Studies\" },\r\n            ]}\r\n            className=\"w-full\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"school\"\r\n            label=\"University/College\"\r\n            placeholder=\"Enter the name of your university/college\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"major\"\r\n            label=\"Subject/Major\"\r\n            placeholder=\"Enter your field of study\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledDropdown\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            options={countries.map(country => ({ value: country.code, label: country.name, name: country.name }))}\r\n            className=\"w-full mt-5\"\r\n            placeholder=\"Select Country\"\r\n          />\r\n          <LabelledTextInput\r\n            name=\"cityOrState\"\r\n            label=\"City/State\"\r\n            placeholder=\"Enter the city/state of your university/college\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <div className=\"flex flex-wrap mt-5 gap-5\">\r\n            <label className=\"w-full mb-2 font-bold text-md text-gray-700\">\r\n              Started\r\n            </label>\r\n            <LabelledDropdown\r\n              name=\"startYear\"\r\n              placeholder=\"Year\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                years.map(year => ({ value: year.toString(), label: year.toString(), name: year.toString() }))\r\n              }\r\n            />\r\n            <LabelledDropdown\r\n              name=\"startMonth\"\r\n              placeholder=\"Month\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                months.map(month => ({ value: month.id, label: month.name, name: month.name }))\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-wrap mt-5 gap-5\">\r\n            <label className=\"w-full mb-2 font-bold text-md text-gray-700\">\r\n              Ended\r\n            </label>\r\n            <LabelledDropdown\r\n              name=\"endYear\"\r\n              placeholder=\"Year\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                Array.from({ length: 50 }, (_, i) => i + 1970).map(year => ({ value: year.toString(), label: year.toString(), name: year.toString() }))\r\n              }\r\n            />\r\n            <LabelledDropdown\r\n              name=\"endMonth\"\r\n              placeholder=\"Month\"\r\n              className=\"w-full md:w-1/2\"\r\n              options={\r\n                months.map(month => ({ value: month.id, label: month.name, name: month.name }))\r\n              }\r\n            />\r\n          </div>\r\n          <LabelledDropdown\r\n            name=\"assessmentFormat\"\r\n            label=\"Assessment Format\"\r\n            placeholder=\"Choose the format of your assessment\"\r\n            className=\"w-full mt-5\"\r\n            options={\r\n              assessmentFormats.map(format => ({ value: format, label: format, name: format }))\r\n            }\r\n          />\r\n          <LabelledTextInput\r\n            name=\"grade\"\r\n            label=\"Marks/Grade\"\r\n            placeholder=\"Enter your final marks/grade\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          <LabelledDropdown\r\n            name=\"hasEca\"\r\n            label=\"Do you have an ECA Certificate?\"\r\n            className=\"w-full mt-5\"\r\n            options={\r\n              yesNos.map(yesNo => ({ value: yesNo, label: yesNo, name: yesNo }))\r\n            }\r\n          />\r\n          <LabelledTextInput\r\n            name=\"ecaAuthority\"\r\n            label=\"ECA Authority\"\r\n            placeholder=\"Enter the name of the authority that issued your ECA certificate\"\r\n            className=\"w-full mt-5\"\r\n          />\r\n          {\r\n            accomplishmentsForDegreeBeingAdded.map(accomplishment => <AccomplishmentCard key={accomplishment.id} accomplishment={accomplishment} />)\r\n          }\r\n          <button type=\"button\" onClick={() => setIsAddingAccomplishment(true)} className=\"mt-5 text-blue-500\">Add Accomplishment</button>\r\n          <input name=\"action\" type=\"hidden\" value=\"saveDegree\" />\r\n          <button type=\"submit\" className=\"flex mt-5 bg-blue-500 text-white px-5 py-2 rounded-md\">Save</button>\r\n        </fetcher.Form>\r\n      }\r\n      {\r\n        <fetcher.Form action=\"/profile/degrees\" method=\"post\">\r\n          <input name=\"action\" type=\"hidden\" value=\"addDegree\" />\r\n          <button type=\"submit\" className=\"flex mt-5 bg-blue-500 text-white px-5 py-2 rounded-md\" disabled={isAddingDegree}>Add Degree</button>\r\n        </fetcher.Form>\r\n      }\r\n      {\r\n        degreeBeingAdded && <AccomplishmentForm action={`/profile/degrees/${degreeBeingAdded}`} open={isAddingAccomplishment} setOpen={setIsAddingAccomplishment} onSubmit={(accomplishments) => {\r\n          setAccomplishmentsForDegreeBeingAdded(accomplishments)\r\n        }} />\r\n      }\r\n    </section>\r\n  )\r\n}", "import { Link } from \"@remix-run/react\";\r\n\r\nexport default function PrivacyPolicyPage() {\r\n  return (\r\n    <div className=\"p-10\">\r\n      <h1 className=\"font-bold text-2xl text-center mb-10\">Privacy Policy</h1>\r\n      <p>This Privacy Policy applies to the website <Link to=\"/\">https://www.biosolver.io</Link>, which is operated by BIOSOLVER CORP. This policy sets out how we collect, use, and protect the personal information of our users.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Collection of Personal Information</h2>\r\n      <p>We collect personal information from our users when they register on our site, fill out a form, or otherwise engage with our services. The personal information we collect may include the user's name, email address, phone number, and other contact information. We may also collect other information such as the user's professional experience or publication record.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Use of Personal Information</h2>\r\n      <p>We use personal information collected from our users to provide our services and improve our website. We may also use personal information to contact users with promotional offers, newsletters, or other marketing materials. Users may opt out of receiving these communications at any time.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Disclosure of Personal Information</h2>\r\n      <p>We will not disclose personal information collected from our users to third parties unless required by law or necessary to provide our services. We may share personal information with service providers who assist us in operating our website or providing our services.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Protection of Personal Information</h2>\r\n      <p>We take reasonable measures to protect the personal information of our users from unauthorized access, use, or disclosure. However, we cannot guarantee the security of personal information transmitted to our website, and users transmit personal information at their own risk.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Use of Cookies</h2>\r\n      <p>Our website may use cookies to enhance the user experience. Cookies are small data files that are stored on a user's device and may include an anonymous unique identifier. Users can disable cookies in their browser settings, but this may limit the functionality of our website.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Links to Third-Party Websites</h2>\r\n      <p>Our website may contain links to third-party websites. We are not responsible for the privacy practices or content of these websites.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Children's Privacy</h2>\r\n      <p>Our website is not intended for use by children under the age of 13, and we do not knowingly collect personal information from children under the age of 13.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Changes to this Privacy Policy</h2>\r\n      <p>We may update this Privacy Policy from time to time. Users will be notified of any changes by posting the updated policy on our website.</p>\r\n\r\n      <h2 className=\"mt-10 font-semibold text-lg\">Contact Us</h2>\r\n      <p>If you have any questions or concerns about this Privacy Policy or our use of personal information, please contact us at <a href=\"mailto:info@biosolver.io\">info@biosolver.io</a>.</p>\r\n\r\n      <p className=\"text-sm mt-10 text-end\">Date of last revision: 05.07.2023</p>\r\n    </div>\r\n  )\r\n}", "import { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { Form } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport { getNoteListItems } from \"~/models/note.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport countries from \"~/assets/data/countries\";\r\nimport { Degree } from \"~/types.client\";\r\nimport assessmentFormats from \"~/assets/data/assessmentFormats\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request);\r\n  const noteListItems = await getNoteListItems({ userId });\r\n  return json({ noteListItems });\r\n};\r\n\r\nexport const action = async ({ request }: LoaderArgs) => {\r\n  const formData = await request.formData();\r\n  const host = formData.get(\"host\");\r\n  const port = formData.get(\"port\");\r\n  const security = formData.get(\"security\");\r\n  const username = formData.get(\"username\");\r\n  const password = formData.get(\"password\");\r\n  const fromEmail = formData.get(\"fromEmail\");\r\n  const fromName = formData.get(\"fromName\");\r\n  const dailyLimit = formData.get(\"dailyLimit\");\r\n  return request.method === \"post\" ? json({}) : null;\r\n}\r\n\r\nexport default function () {\r\n  const [degrees, setDegrees] = useState<(Degree & {\r\n    saved: boolean;\r\n  })[]>([]);\r\n\r\n  const addDegree = () => {\r\n    setDegrees([\r\n      ...degrees,\r\n      {\r\n        type: '',\r\n        university: '',\r\n        field: '',\r\n        country: '',\r\n        stateOrCity: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        currentlyStudying: false,\r\n        assessmentFormat: '',\r\n        marksOrGrade: '',\r\n        hasEca: false,\r\n        ecaAuthority: '',\r\n        saved: false\r\n      }\r\n    ])\r\n  }\r\n\r\n  const markAsSaved = (index: number) => {\r\n    degrees[index].saved = true;\r\n    setDegrees([\r\n      ...degrees\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <Form action=\"/profile/single\" method=\"post\">\r\n      <section className=\"flex flex-col space-y-4 mt-5\">\r\n        {\r\n          degrees.map((degree, index) => {\r\n            return degree.saved === true ? (\r\n              <div>\r\n                <h4>\r\n                  {degree.type}\r\n                </h4>\r\n                <h4>\r\n                  {degree.university}\r\n                </h4>\r\n                <h4>\r\n                  {degree.field}\r\n                </h4>\r\n                <h4>\r\n                  {degree.country}\r\n                </h4>\r\n                <h4>\r\n                  {degree.stateOrCity}\r\n                </h4>\r\n                <h4>\r\n                  {degree.startDate}\r\n                </h4>\r\n                <h4>\r\n                  {degree.endDate}\r\n                </h4>\r\n                <h4>\r\n                  {degree.assessmentFormat}\r\n                </h4>\r\n                <h4>\r\n                  {degree.marksOrGrade}\r\n                </h4>\r\n                <h4>\r\n                  {degree.hasEca}\r\n                </h4>\r\n                <h4>\r\n                  {degree.ecaAuthority}\r\n                </h4>\r\n                <button onClick={() => {\r\n                  setDegrees([\r\n                    ...degrees.slice(0, index),\r\n                    ...degrees.slice(index + 1)\r\n                  ])\r\n                }\r\n                } className=\"w-full bg-red-500 text-white p-3 rounded-md\">Delete</button>\r\n                <div className=\"p-5 rounded-md border-2 hidden\">\r\n                  <label htmlFor=\"name\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Degree\r\n                  </label>\r\n                  <select\r\n                    name=\"education.type\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    value={degree.type}\r\n                  >\r\n                    <option value=\"None\">Select Degree</option>\r\n                    <option value=\"UG Diploma\">UG Diploma</option>\r\n                    <option value=\"Bachelors\">Bachelors</option>\r\n                    <option value=\"PG Diploma\">PG Diploma</option>\r\n                    <option value=\"Professional Degree\">Professional Degree</option>\r\n                    <option value=\"Masters\">Masters</option>\r\n                    <option value=\"PhD or Doctoral Studies\">PhD or Doctoral Studies</option>\r\n                  </select>\r\n                  <label htmlFor=\"university\" className=\"block mb-2 font-medium text gray-700\">\r\n                    University\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education.university\"\r\n                    value={degree.university}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Field\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education.field\"\r\n                    value={degree.field}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Country\r\n                  </label>\r\n                  <select\r\n                    name=\"education.country\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    value={degree.country}\r\n                  >\r\n                    <option value=\"\">Select Country</option>\r\n                    {\r\n                      countries.map((country) => (\r\n                        <option key={country.code} value={country.name}>{country.name}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                  <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    State/City\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education.stateOrCity\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <label htmlFor=\"started\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Start\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"education.startDate\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  {!degree.currentlyStudying && <div className=\"mb-4\">\r\n                    <label htmlFor=\"end\" className=\"block mb-2 font-medium text-gray-700\">\r\n                      End\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"education.endDate\"\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    />\r\n                  </div>}\r\n                  <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Assessment Format\r\n                  </label>\r\n                  <select\r\n                    name=\"education.assessmentFormat\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  >\r\n                    <option value=\"\">Choose Format</option>\r\n                    {\r\n                      assessmentFormats.map((format) => (\r\n                        <option key={format} value={format}>{format}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                  <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Marks/Grade\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education.marksOrGrade\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    Do you have an ECA Certificate?\r\n                  </label>\r\n                  <select\r\n                    name=\"education.hasEca\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  >\r\n                    <option value=\"yes\">Yes</option>\r\n                    <option value=\"no\">No</option>\r\n                  </select>\r\n                  <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    ECA Authority\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"education.ecaAuthority\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <button onClick={() => {\r\n                    markAsSaved(index);\r\n                  }} className=\"w-full bg-blue-500 text-white p-3 rounded-md\">Save</button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"p-5 rounded-md border-2\">\r\n                <label htmlFor=\"name\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Degree\r\n                </label>\r\n                <select\r\n                  name=\"education.type\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  <option value=\"None\">Select Degree</option>\r\n                  <option value=\"UG Diploma\">UG Diploma</option>\r\n                  <option value=\"Bachelors\">Bachelors</option>\r\n                  <option value=\"PG Diploma\">PG Diploma</option>\r\n                  <option value=\"Professional Degree\">Professional Degree</option>\r\n                  <option value=\"Masters\">Masters</option>\r\n                  <option value=\"PhD or Doctoral Studies\">PhD or Doctoral Studies</option>\r\n                </select>\r\n                <label htmlFor=\"university\" className=\"block mb-2 font-medium text gray-700\">\r\n                  University\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"education.university\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Field\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"education.field\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Country\r\n                </label>\r\n                <select\r\n                  name=\"education.country\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {\r\n                    countries.map((country) => (\r\n                      <option key={country.code} value={country.name}>{country.name}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n                <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  State/City\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"education.stateOrCity\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <label htmlFor=\"started\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Start\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"education.startDate\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                {!degree.currentlyStudying && <div className=\"mb-4\">\r\n                  <label htmlFor=\"end\" className=\"block mb-2 font-medium text-gray-700\">\r\n                    End\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"education.endDate\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                </div>}\r\n                <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Assessment Format\r\n                </label>\r\n                <select\r\n                  name=\"education.assessmentFormat\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  <option value=\"\">Choose Format</option>\r\n                  {\r\n                    assessmentFormats.map((format) => (\r\n                      <option key={format} value={format}>{format}</option>\r\n                    ))\r\n                  }\r\n                </select>\r\n                <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Marks/Grade\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"education.marksOrGrade\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <label htmlFor=\"country\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  Do you have an ECA Certificate?\r\n                </label>\r\n                <select\r\n                  name=\"education.hasEca\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                >\r\n                  <option value=\"yes\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n                <label htmlFor=\"field\" className=\"block mb-2 font-medium text-gray-700\">\r\n                  ECA Authority\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"education.ecaAuthority\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                />\r\n                <button onClick={() => {\r\n                  markAsSaved(index);\r\n                }} className=\"w-full bg-blue-500 text-white p-3 rounded-md\">Save</button>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <button onClick={() => {\r\n          addDegree();\r\n        }} className='w-full text-center border-gray-400 rounded-md border-dashed border-2 py-5'>\r\n          Add Degree\r\n        </button>\r\n      </section>\r\n    </Form>\r\n  )\r\n}\r\n", "import type { User, Note } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.findFirst({\n    select: { id: true, body: true, title: true },\n    where: { id, userId },\n  });\n}\n\nexport function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\n  return prisma.note.findMany({\n    where: { userId },\n    select: { id: true, title: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n}\n\nexport function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.create({\n    data: {\n      title,\n      body,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import ProfileSkills from \"~/modules/profile/Skills\";\r\n\r\nexport default function () {\r\n  return (\r\n    <ProfileSkills />\r\n  )\r\n}", "import { useForm } from 'react-hook-form';\r\n\r\nconst ProfileSkills = () => {\r\n  const {register} =  useForm()\r\n\r\n  return (\r\n    <form className='w-full max-w-6xl mx-auto p-10'>\r\n      <h2 className='text-2xl font-bold mb-4'>Your Skills</h2>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"fullName\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Full Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"fullName\"\r\n          {...register(\"fullName\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"email\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          {...register(\"email\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"phone\" className=\"block mb-2 font-medium text-gray-700\">\r\n          Phone Number\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phone\"\r\n          {...register(\"phone\")}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProfileSkills;", "import { Outlet } from \"@remix-run/react\";\r\nimport ProfilePersonal from \"~/modules/profile/Personal\";\r\n\r\nexport default function () {\r\n  return (\r\n    <Outlet />\r\n  )\r\n}", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  isRouteErrorResponse,\n  useLoaderData,\n  useRouteError,\n} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote, getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ id: params.noteId, userId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ id: params.noteId, userId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (error instanceof Error) {\n    return <div>An unexpected error occurred: {error.message}</div>;\n  }\n\n  if (!isRouteErrorResponse(error)) {\n    return <h1>Unknown Error</h1>;\n  }\n\n  if (error.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  return <div>An unexpected error occurred: {error.statusText}</div>;\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import { type } from \"os\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MultiSelect from \"~/components/MultiSelect\";\r\nimport SingleSelect from \"~/components/SingleSelect\";\r\n\r\ninterface WorkExperienceFormData {\r\n  experiences: WorkExperience[];\r\n}\r\n\r\ntype WorkExperience = {\r\n  jobType: string,\r\n  role: string,\r\n  companyName: string,\r\n  domain: string,\r\n  subdomains: string[]\r\n}\r\n\r\nexport default function () {\r\n  const { register } = useForm()\r\n\r\n  const [profile, setProfile] = useState<WorkExperienceFormData>({\r\n    experiences: []\r\n  });\r\n\r\n  const domains = [\r\n    {\r\n      \"domain\": \"Biotechnology\",\r\n      \"sub-domains\": [\r\n        \"Industrial Biotechnology\",\r\n        \"Environmental Biotechnology\",\r\n        \"Animal Biotechnology\",\r\n        \"Plant Biotechnology\",\r\n        \"Drug Discovery and Development\",\r\n        \"IP and Patent law\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Molecular Biology\",\r\n      \"sub-domains\": [\r\n        \"Molecular Cloning\",\r\n        \"Gene Expression\",\r\n        \"Genome Editing\",\r\n        \"Next Gen Sequencing\",\r\n        \"Cell culture Techniques\",\r\n        \"Yeast Biology\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Microbiology\",\r\n      \"sub-domains\": [\r\n        \"Medical microbiology\",\r\n        \"Industrial Microbiology\",\r\n        \"Bacteriology\",\r\n        \"Food Microbiology\",\r\n        \"Gene Expression\",\r\n        \"Industrial Microbiology\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Biochemistry\",\r\n      \"sub-domains\": [\r\n        \"Protein Biochemistry\",\r\n        \"Carbohydrate Biochemistry\",\r\n        \"Lipid Biochemistry\",\r\n        \"Enzymology\",\r\n        \"Transplant Immunology\",\r\n        \"Cell Differentiation\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Immunology\",\r\n      \"sub-domains\": [\r\n        \"Immunotherapy\",\r\n        \"Innate Immunity\",\r\n        \"Autoimmune response\",\r\n        \"Adaptive Immunity\",\r\n        \"Organelle Biology\",\r\n        \"Regulatory Affairs\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Cell Biology\",\r\n      \"sub-domains\": [\r\n        \"Cell Cycle\",\r\n        \"Cell Differentiation\",\r\n        \"Cytoskeleton\",\r\n        \"Cellular Imaging\",\r\n        \"Pharmacokinetics and Pharmacodynamics\",\r\n        \"Medical Diagnosis\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Pharmaceutical Sciences\",\r\n      \"sub-domains\": [\r\n        \"Pharmaceutical Formulation\",\r\n        \"Clinical Trials and Research\",\r\n        \"Protein Folding and Dynamics\",\r\n        \"Statistical Analysis\",\r\n        \"Genomic Data Analysis\",\r\n        \"Genetic Circuit Design\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Clinical Medicine\",\r\n      \"sub-domains\": [\r\n        \"Medical Diagnosis\",\r\n        \"Membrane Biophysics\",\r\n        \"Experimental Design\",\r\n        \"Sequence Alignment and Analysis\",\r\n        \"Metabolic Engineering\",\r\n        \"Analytical Chemistry\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Biophysics\",\r\n      \"sub-domains\": [\r\n        \"Biomedical Imaging\",\r\n        \"Biomechanics\",\r\n        \"Rehabilitation Engineering\",\r\n        \"Medical Device Development\",\r\n        \"Bioinstrumentation\",\r\n        \"Structural Bioinformatics\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Bio-statistics\",\r\n      \"sub-domains\": [\r\n        \"Genomics\",\r\n        \"Business Development\",\r\n        \"Project Management\",\r\n        \"Proteomics\",\r\n        \"SOP preparation\",\r\n        \"Techno-economics\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Computational Biology\",\r\n      \"sub-domains\": [\r\n        \"Single-Molecule Biophysics\",\r\n        \"Data Mining and Visualization\",\r\n        \"Biosecurity and Ethics\",\r\n        \"Computational Chemistry\",\r\n        \"Bioinstrumentation\",\r\n        \"Content creation\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Synthetic Biology\",\r\n      \"sub-domains\": [\r\n        \"Biomedical Imaging\",\r\n        \"Biomechanics\",\r\n        \"Rehabilitation Engineering\",\r\n        \"Medical Device Development\",\r\n        \"Bioinstrumentation\",\r\n        \"Structural Bioinformatics\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Chemistry\",\r\n      \"sub-domains\": [\r\n        \"Organic Chemistry\",\r\n        \"Analytical Chemistry\",\r\n        \"Inorganic Chemistry\",\r\n        \"Physical Chemistry\",\r\n        \"Medicinal Chemistry\",\r\n        \"Rehabilitation Engineering\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Biomedical Engineering\",\r\n      \"sub-domains\": [\r\n        \"Biomedical Imaging\",\r\n        \"Biomechanics\",\r\n        \"Rehabilitation Engineering\",\r\n        \"Medical Device Development\",\r\n        \"Bioinstrumentation\",\r\n        \"Structural Bioinformatics\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Bio-omics\",\r\n      \"sub-domains\": [\r\n        \"Genomics\",\r\n        \"Transcriptomics\",\r\n        \"Proteomics\",\r\n        \"Metabolomics\",\r\n        \"Lipidomics\",\r\n        \"Genomics\"\r\n      ]\r\n    },\r\n    {\r\n      \"domain\": \"Bioventure & Bioeconomy\",\r\n      \"sub-domains\": [\r\n        \"Business Development\",\r\n        \"Market Research\",\r\n        \"Techno-economics\",\r\n        \"Bioinformatics\",\r\n        \"Bioinformatics\",\r\n        \"Bioinformatics\"\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const [addingWork, setAddingWork] = useState(false);\r\n\r\n  const [domain, setDomain] = useState<any>(null)\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        !addingWork && <button onClick={() => {\r\n          setAddingWork(true);\r\n        }} className='w-full text-center border-gray-400 rounded-md border-dashed border-2 py-5'>\r\n          Add Experience\r\n        </button>\r\n      }\r\n      {\r\n        addingWork && <form className='w-full max-w-6xl mx-auto p-10'>\r\n          <h2 className='text-2xl font-bold mb-4'>Work Experience</h2>\r\n          <div className=\"mb-4\">\r\n            <MultiSelect\r\n              options={[\r\n                { \"label\": \"Technical Consultation\", \"value\": \"Technical Consultation\" },\r\n                { \"label\": \"Management Consultation\", \"value\": \"Management Consultation\" },\r\n                { \"label\": \"Manufacturing Consultation\", \"value\": \"Manufacturing Consultation\" },\r\n                { \"label\": \"Project Management\", \"value\": \"Project Management\" },\r\n                { \"label\": \"Sub-contractor Management\", \"value\": \"Sub-contractor Management\" },\r\n                { \"label\": \"Business Development\", \"value\": \"Business Development\" },\r\n                { \"label\": \"Clinical Trial Coordination\", \"value\": \"Clinical Trial Coordination\" },\r\n                { \"label\": \"Regulatory Approvals\", \"value\": \"Regulatory Approvals\" },\r\n                { \"label\": \"IP and Patent Filing\", \"value\": \"IP and Patent Filing\" },\r\n                { \"label\": \"Technical Writing\", \"value\": \"Technical Writing\" },\r\n                { \"label\": \"Data Management and validation\", \"value\": \"Data Management and validation\" },\r\n                { \"label\": \"SOP Preparation\", \"value\": \"SOP Preparation\" },\r\n                { \"label\": \"Experimental Troubleshooting\", \"value\": \"Experimental Troubleshooting\" },\r\n                { \"label\": \"Data Analysis\", \"value\": \"Data Analysis\" },\r\n                { \"label\": \"Bioinformatic Analysis\", \"value\": \"Bioinformatic Analysis\" },\r\n                { \"label\": \"Bio-Statistical Analysis\", \"value\": \"Bio-Statistical Analysis\" },\r\n                { \"label\": \"Scientific Writing and Editing\", \"value\": \"Scientific Writing and Editing\" },\r\n                { \"label\": \"Literature Review\", \"value\": \"Literature Review\" },\r\n                { \"label\": \"Illustration and Animation\", \"value\": \"Illustration and Animation\" },\r\n                { \"label\": \"Content Creation\", \"value\": \"Content Creation\" },\r\n                { \"label\": \"Biotech Marketing\", \"value\": \"Biotech Marketing\" },\r\n                { \"label\": \"Biotech Sales\", \"value\": \"Biotech Sales\" },\r\n                { \"label\": \"Accounting and Purchase\", \"value\": \"Accounting and Purchase\" },\r\n                { \"label\": \"HR & Admin\", \"value\": \"HR & Admin\" }\r\n              ]}\r\n              name='jobType'\r\n              placeholder='Job Type'\r\n            />\r\n\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"email\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Role\r\n            </label>\r\n            <SingleSelect\r\n              onChange={(option) => console.log(option)}\r\n              options={[\r\n                { \"id\": \"Experimental Biologist\", \"name\": \"Experimental Biologist\", \"available\": true },\r\n                { \"id\": \"Computational Biologist\", \"name\": \"Computational Biologist\", \"available\": true },\r\n                { \"id\": \"Bio-statistician\", \"name\": \"Bio-statistician\", \"available\": true },\r\n                { \"id\": \"Bio-Physicist\", \"name\": \"Bio-Physicist\", \"available\": true },\r\n                { \"id\": \"Technical Consultant\", \"name\": \"Technical Consultant\", \"available\": true },\r\n                { \"id\": \"Technical Writter\", \"name\": \"Technical Writter\", \"available\": true },\r\n                { \"id\": \"Management Consultant\", \"name\": \"Management Consultant\", \"available\": true },\r\n                { \"id\": \"Regulatory approval Specialist\", \"name\": \"Regulatory approval Specialist\", \"available\": true },\r\n                { \"id\": \"Clinical Trial Specialist\", \"name\": \"Clinical Trial Specialist\", \"available\": true },\r\n                { \"id\": \"IP and patent Specialist\", \"name\": \"IP and patent Specialist\", \"available\": true },\r\n                { \"id\": \"Non-technical\", \"name\": \"Non-technical\", \"available\": true },\r\n                { \"id\": \"Other\", \"name\": \"Other\", \"available\": true }\r\n              ]\r\n              } />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"email\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Company Name\r\n            </label>\r\n            <input type=\"text\" name=\"companyName\" />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"phone\" className=\"block mb-2 font-medium text-gray-700\">\r\n              Domain\r\n            </label>\r\n            <SingleSelect\r\n              onChange={(option) => {\r\n                console.log(option)\r\n                setDomain(option)\r\n              }}\r\n              options={domains.map(domain => {\r\n                return { id: domain.domain, name: domain.domain, available: true }\r\n              })} />\r\n            {\r\n              domain && domains.find(item => item.domain === domain.id) && (\r\n                <MultiSelect\r\n                  name=\"subdomains\"\r\n                  options={domains.find(item => item.domain === domain.id)['sub-domains'].map(subDomain => {\r\n                    return { label: subDomain, value: subDomain }\r\n                  })} />\r\n              )\r\n            }\r\n          </div>\r\n        </form>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}", "import { Fragment, useState } from 'react'\r\nimport { Combobox, Transition } from '@headlessui/react'\r\nimport { XCircleIcon } from '@heroicons/react/24/solid'\r\n\r\nexport default function MultiSelect({\r\n  options,\r\n  name,\r\n  defaultValue,\r\n  placeholder\r\n}: {\r\n  options: { value: any, label: any }[],\r\n  name: string,\r\n  defaultValue?: any,\r\n  placeholder?: string\r\n}) {\r\n  const [selectedOptions, setSelectedOptions] = useState<any>(defaultValue || [])\r\n  const [query, setQuery] = useState('')\r\n\r\n  const filteredOptions =\r\n    query === ''\r\n      ? options\r\n      : options.filter((option) =>\r\n        option.label\r\n          .toLowerCase()\r\n          .replace(/\\s+/g, '')\r\n          .includes(query.toLowerCase().replace(/\\s+/g, ''))\r\n      )\r\n\r\n  return (\r\n    <Combobox value={selectedOptions} onChange={setSelectedOptions} multiple={true}>\r\n      {selectedOptions.length > 0 && (\r\n        <ul>\r\n          {selectedOptions.map((opt: any) => (\r\n            <li key={opt.value} className='inline-block w-auto bg-gray-300 p-2 mr-1 mt-1'>\r\n              {opt.label}\r\n              <button className='ml-1' onClick={() => setSelectedOptions(selectedOptions.filter((option: any) => option.value !== opt.value))}>\r\n                <XCircleIcon className='w-4 h-4 inline-block' />\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input type=\"hidden\" name={name} value={selectedOptions.map((option: any) => option.value).join(',')} />\r\n      <Combobox.Button className='w-full'>\r\n        <Combobox.Input className={'w-full bordered border-[1px] border-gray-400 p-2'} placeholder={placeholder} />\r\n      </Combobox.Button>\r\n      <Transition\r\n        as={Fragment}\r\n        leave=\"transition ease-in duration-100\"\r\n        leaveFrom=\"opacity-100\"\r\n        leaveTo=\"opacity-0\"\r\n        afterLeave={() => setQuery('')}\r\n      >\r\n        <Combobox.Options className='absolute w-auto overflow-auto rounded-md bg-white text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>\r\n          {filteredOptions.map((opt) => (\r\n            <Combobox.Option key={opt.value} value={opt} className='p-2 hover:bg-gray-200 relative cursor-default select-none'>\r\n              {opt.label}\r\n            </Combobox.Option>\r\n          ))}\r\n        </Combobox.Options>\r\n      </Transition>\r\n    </Combobox>\r\n  )\r\n}", "import { useEffect, useState } from 'react'\r\nimport { Listbox } from '@headlessui/react'\r\n\r\nexport default function SingleSelect({\r\n  options,\r\n  onChange,\r\n}: {\r\n  options: { id: string, name: string, available?: boolean }[]\r\n  onChange: (option: { id: string, name: string, available?: boolean }) => void\r\n}) {\r\n  const [selectedOption, setSelectedOption] = useState({\r\n    id: 'None',\r\n    name: 'Choose an option',\r\n    availalbe: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    onChange(selectedOption)\r\n  }, [selectedOption])\r\n\r\n  return (\r\n    <div className='w-full bordered border-2 border-gray-400 rounded-md'>\r\n      <Listbox value={selectedOption} onChange={setSelectedOption}>\r\n        <Listbox.Button>{selectedOption.name}</Listbox.Button>\r\n        <Listbox.Options>\r\n          {options.map((option) => (\r\n            <Listbox.Option\r\n              key={option.id}\r\n              value={option}\r\n              disabled={!option.available}\r\n            >\r\n              {option.name}\r\n            </Listbox.Option>\r\n          ))}\r\n        </Listbox.Options>\r\n      </Listbox>\r\n    </div>\r\n  )\r\n}", "import ListHighlight from \"~/layout/anon/ListHighlight\";\r\nimport SimpleHighlight from \"~/layout/anon/SimpleHighlight\";\r\nimport FieldsSection from \"~/layout/anon/common/FieldsSection\";\r\nimport ServicesSection from \"~/layout/anon/common/ServicesSection\";\r\nimport HeroSection from \"~/layout/anon/seeker/HeroSection\";\r\n\r\nexport default function SeekerPage() {\r\n  return (\r\n    <div className=\"p-10\">\r\n      <HeroSection />\r\n      <SimpleHighlight\r\n        className=\"mt-20\"\r\n        title=\"How are we different?\"\r\n        description=\"At Bio-Solver our Solvers (freelancers) do not apply to projects. We verify all their credentials and screen and score their skills and assign points for each and add that to our database. When you post a project, we identify the hard and soft skill requirements for the project and use a skill-match algorithm to connect you with the most suitable experts based on their hard and soft skills, so that you do not have deal with under qualified candidates.\" />\r\n      <SimpleHighlight\r\n        className=\"mt-10\"\r\n        title=\"Who can be a Seeker?\"\r\n        description=\"Anyone, anywhere who needs a Biotech/Pharma expert/student to help with project specific needs. You can be a Biotech/Pharma company, an academic lab or an individual.\" />\r\n      <ListHighlight\r\n        className=\"mt-10\"\r\n        title=\"How to be a Seeker?\"\r\n        bullets={[\r\n          \"Register as a Seeker.\",\r\n          \"Fill in our online form to post a project.\",\r\n          \"Select the hard and soft skill requirements for your projects.\",\r\n          \"Choose a range of hourly rates you are willing to pay the Solver.\",\r\n          \"Set the time duration and deliverables for the project.\",\r\n          \"We will find the most suitable and available solvers for your project.\",\r\n          \"You can choose a Solver from a curated shortlist of top Solvers and set up the payment.\",\r\n          \"Once a project is finished, you can approve it.\",\r\n          \"After we receive your approval, we process the payment to the Solver.\"\r\n        ]} />\r\n      <SimpleHighlight\r\n        className=\"mt-10\"\r\n        title=\"What is our revenue model?\"\r\n        description=\"We charge the Solvers a commission for each project. You do not have to pay any additional cost.\" />\r\n      <ServicesSection />\r\n      <FieldsSection />\r\n    </div>\r\n  )\r\n}", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n\nexport function cx(...args: unknown[]) {\n  return args\n    .flat()\n    .filter(x => typeof x === 'string')\n    .join(' ')\n    .trim()\n}", "import { cx } from \"~/utils\"\r\n\r\nexport default function ListHighlight({\r\n  title,\r\n  subtitle,\r\n  description,\r\n  bullets = [],\r\n  className\r\n}: {\r\n  title?: string,\r\n  subtitle?: string,\r\n  description?: string,\r\n  className?: string,\r\n  bullets?: string[]\r\n}) {\r\n  return (\r\n    <div className={cx(className)}>\r\n      {title && <h1 className=\"text-4xl font-bold\">{title}</h1>}\r\n      {subtitle && <h3 className=\"text-2xl font-semibold\">{subtitle}</h3>}\r\n      {description && <p className=\"text-lg\">{description}</p>}\r\n      {\r\n        bullets.map((bullet, index) => (\r\n          <div key={index} className=\"flex items-center mt-2\">\r\n            <div className=\"w-2 h-2 bg-purple-600 rounded-full mr-2\"></div>\r\n            <p className=\"text-lg\">{bullet}</p>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n", "import { cx } from \"~/utils\"\r\n\r\nexport default function SimpleHighlight({\r\n  title,\r\n  subtitle,\r\n  description,\r\n  className\r\n}: {\r\n  title?: string,\r\n  subtitle?: string,\r\n  description?: string,\r\n  className?: string\r\n}) {\r\n  return (\r\n    <div className={cx(className)}>\r\n      {title && <h1 className=\"text-4xl font-bold\">{title}</h1>}\r\n      {subtitle && <h3 className=\"text-2xl font-semibold\">{subtitle}</h3>}\r\n      {description && <p className=\"text-lg mt-5\">{description}</p>}\r\n    </div>\r\n  )\r\n}\r\n", "import { cx } from \"~/utils\"\r\n\r\nexport default function FieldGroup({\r\n  group,\r\n  items,\r\n  className\r\n}: {\r\n  group: string,\r\n  items: string[],\r\n  className?: string\r\n}) {\r\n  return (\r\n    <div className={cx('rounded-md border-2 border-black items-center', className)}>\r\n      <div className=\"text-center text-xl font-semibold p-5\">\r\n        {group}\r\n      </div>\r\n      <div className=\"flex flex-wrap justify-center\">\r\n        {items.map((item, index) => (\r\n          <div className=\"bg-white shadow-md rounded-md px-5 py-2 mx-5 my-2 flex items-center\" key={index}>\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}", "import FieldGroup from \"./FieldGroup\";\r\n\r\nconst fields: Record<string, string[]> = {\r\n  \"Biotechnology & Molecular Biology\": [\r\n    \"PCR and Cloning\",\r\n    \"DNA/RNA extraction\",\r\n    \"Protein Isolation & Purification\",\r\n    \"Cell culture techniques\",\r\n    \"Understanding of molecular mechanisms\"\r\n  ],\r\n  \"Microbiology & Virology\": [\r\n    \"Cell Culture Techniques\",\r\n    \"Understanding of Microorganism Life Cycles\",\r\n    \"Molecular Techniques Related to Microbiology\",\r\n    \"Microbial Genomics\",\r\n    \"Antimicrobial Susceptibility Testing\"\r\n  ],\r\n  \"Biochemistry & Chromatography\": [\r\n    \"Understanding of Biochemical Mechanisms\",\r\n    \"Chromatography Techniques\",\r\n    \"Mass Spectrometry\",\r\n    \"Metabolic Pathway Analysis\",\r\n    \"Protein-Ligand Interactions\"\r\n  ],\r\n  \"Protein Biochemistry & Enzymology\": [\r\n    \"Recombinant Protein Expression\",\r\n    \"Protein Purification\",\r\n    \"Western Blotting\",\r\n    \"Enzyme Kinetics\",\r\n    \"Protein-Protein Interactions\"\r\n  ],\r\n  \"Cancer Biology & Immunology\": [\r\n    \"Tumor Biology\",\r\n    \"Immunohistochemistry\",\r\n    \"Flow Cytometry\",\r\n    \"Understanding of cancer genomics\",\r\n    \"Cell Signaling Pathways\"\r\n  ],\r\n  \"Genetics & Genetic Engineering\": [\r\n    \"Understanding of Genetics\",\r\n    \"Genotyping\",\r\n    \"Genetic Screening\",\r\n    \"CRISPR Technique\",\r\n    \"Transgenic Organism Creation\"\r\n  ],\r\n  \"Genomics, Proteomics & Metabolomics\": [\r\n    \"Next-Generation Sequencing\",\r\n    \"Mass Spectrometry\",\r\n    \"Metabolomics Data Analysis\",\r\n    \"Understanding of Genomic Databases\",\r\n    \"Proteomics Techniques\"\r\n  ],\r\n  \"Computational Biology & Bioinformatics\": [\r\n    \"Computational Modeling\",\r\n    \"Genomics Data Analysis\",\r\n    \"Programming (Python/R)\",\r\n    \"Machine Learning Techniques\",\r\n    \"Database Management\"\r\n  ],\r\n  \"Biostatistics & Data Science\": [\r\n    \"Statistical Modelling\",\r\n    \"Data Visualization\",\r\n    \"Predictive Modelling\",\r\n    \"Proficiency in Statistical Tools\",\r\n    \"Hypothesis Testing\"\r\n  ],\r\n  \"Pharmacology & Toxicology\": [\r\n    \"Drug Design & Synthesis\",\r\n    \"Pharmacokinetics & Pharmacodynamics\",\r\n    \"In vivo & In vitro testing\",\r\n    \"Molecular docking\",\r\n    \"Bioavailability and bioequivalence studies\"\r\n  ],\r\n  \"Pharmaceutical Manufacturing & Industrial Pharmacy\": [\r\n    \"Knowledge of GMP\",\r\n    \"Pharmaceutical Formulation\",\r\n    \"Process Optimization\",\r\n    \"Process Validation\",\r\n    \"CAPA (Corrective and Preventive Action)\"\r\n  ],\r\n  \"Bioprocess Engineering & Bioproduction\": [\r\n    \"Bioreactor Operation\",\r\n    \"Downstream Processing\",\r\n    \"Fermentation Techniques\",\r\n    \"Scale-Up Processes\",\r\n    \"Understanding of GMP\"\r\n  ],\r\n  \"Drug Discovery & Development\": [\r\n    \"Understanding of Drug Design Processes\",\r\n    \"High Throughput Screening\",\r\n    \"Lead Optimization\",\r\n    \"In vivo and In vitro Testing\",\r\n    \"Knowledge of Regulatory Requirements\"\r\n  ],\r\n  \"Clinical Research & Clinical Trials Coordination\": [\r\n    \"Clinical Trial Design\",\r\n    \"Patient Recruitment\",\r\n    \"Data collection & Analysis\",\r\n    \"Adverse Event Monitoring\",\r\n    \"GCP Compliance\"\r\n  ],\r\n  \"Bio-Medical Technology & Biomedical Engineering\": [\r\n    \"Medical Device Design\",\r\n    \"Biomedical Imaging\",\r\n    \"Biocompatibility Assessments\",\r\n    \"Understanding of Medical Software Development\",\r\n    \"Medical Robotics\"\r\n  ],\r\n  \"Environmental Biotechnology & Bioremediation\": [\r\n    \"Understanding of Environmental Systems\",\r\n    \"Bioremediation Techniques\",\r\n    \"Environmental Monitoring\",\r\n    \"Biodegradation\",\r\n    \"Environmental Genomics\"\r\n  ],\r\n  \"Personalized Medicine & Genomic Data Analysis\": [\r\n    \"Understanding of Genomics\",\r\n    \"Genomic Data Analysis\",\r\n    \"Personalized Therapy Strategies\",\r\n    \"Pharmacogenomics\",\r\n    \"Medical Genetics\"\r\n  ],\r\n  \"Medical Devices & Instrumentation\": [\r\n    \"Medical Device Design\",\r\n    \"Regulatory Requirements for Medical Devices\",\r\n    \"Testing and Validation\",\r\n    \"Bioinstrumentation\",\r\n    \"Understanding of Medical Imaging Technologies\"\r\n  ],\r\n  \"Regulatory Affairs & Compliance in Pharma\": [\r\n    \"Understanding of FDA/EMA Regulations\",\r\n    \"Drug Approval Process\",\r\n    \"Regulatory Submissions\",\r\n    \"Post-Marketing Surveillance\",\r\n    \"Compliance Reporting\"\r\n  ],\r\n  \"Patent Law & Intellectual Property in Biotech\": [\r\n    \"Understanding of Patent Law\",\r\n    \"Patent Application\",\r\n    \"Technology Transfer\",\r\n    \"Legal Writing\",\r\n    \"Confidentiality Agreements\"\r\n  ],\r\n  \"Business Development & Sales in Biotech\": [\r\n    \"Market Analysis\",\r\n    \"Client Relationship Management\",\r\n    \"Business Strategy Development\",\r\n    \"Negotiation Skills\",\r\n    \"Understanding of Biotech Industry\"\r\n  ],\r\n  \"Marketing & Advertising in Pharma\": [\r\n    \"Market Research\",\r\n    \"Digital Marketing\",\r\n    \"SEO/SEM\",\r\n    \"Product Marketing\",\r\n    \"Understanding of Pharma Industry\"\r\n  ],\r\n  \"Bioentrepreneurship & Biotech Project Management\": [\r\n    \"Business Plan Development\",\r\n    \"Financial Planning\",\r\n    \"Project Management\",\r\n    \"Risk Assessment\",\r\n    \"Understanding of Biotech Start-up Ecosystem\"\r\n  ],\r\n  \"Bioventure & Bioeconomy\": [\r\n    \"Financial Analysis\",\r\n    \"Market Analysis\",\r\n    \"Understanding of Biotech/Pharma Industry\",\r\n    \"Project Management\",\r\n    \"Business Development Strategies\"\r\n  ]\r\n};\r\n\r\nexport default function FieldsSection() {\r\n  return (\r\n    <section className=\"w-full max-w-7xl h-auto mx-auto mt-10 items-center\">\r\n      <div className=\"text-center text-4xl font-bold\">\r\n        What fields do we specialize in?\r\n      </div>\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-2 w-full items-center mt-5 justify-center content-center\">\r\n        {\r\n          Object.keys(fields).map((field, index) => (\r\n            <FieldGroup key={index} group={field} items={fields[field]} className=\"col-span-1 w-full h-full\" />\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}", "const services = [\r\n  \"Management Consultation\",\r\n  \"Technical Consultation\",\r\n  \"Manufacturing Consultation\",\r\n  \"Project Management\",\r\n  \"Sub-contractor Management\",\r\n  \"Clinical Trial Coordination\",\r\n  \"Regulatory Approvals\",\r\n  \"IP and Patent Filing\",\r\n  \"Technical Writing\",\r\n  \"Data Validation\",\r\n  \"SOP Preparation\",\r\n  \"Experimental Troubleshooting\",\r\n  \"Experimental Data Analysis\",\r\n  \"Bioinformatic Analysis\",\r\n  \"Bio-Statistical Analysis\",\r\n  \"Scientific Writing and Editing\",\r\n  \"Literature Review\",\r\n  \"Illustration and Animation\",\r\n  \"Business Development\",\r\n  \"Content Creation\",\r\n  \"Biotech Marketing\",\r\n  \"Biotech Sales\",\r\n  \"Accounting and Purchase\",\r\n  \"HR and Admin\"\r\n]\r\n\r\nexport default function ServicesSection() {\r\n  return (\r\n    <section className=\"flex flex-col w-full max-w-6xl h-auto mx-auto mt-10 items-center\">\r\n      <div className=\"text-center text-4xl font-bold\">\r\n        What services do we offer?\r\n      </div>\r\n      <div className=\"w-full flex flex-wrap justify-center\">\r\n        {services.map((service, index) => (\r\n          <div className=\"bg-white shadow-md rounded-md px-5 py-2 mx-5 my-2 flex items-center\" key={index}>\r\n            {service}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\n\r\nexport default function HeroSection() {\r\n  return (\r\n    <section className=\"flex flex-col w-full max-w-3xl h-auto mx-auto mt-10 items-center\">\r\n      <div className=\"text-center text-6xl font-semibold\">\r\n        Hire freelancers from anywhere, anytime.\r\n      </div>\r\n      <Link to=\"/register\" className=\"bg-purple-600 hover:bg-purple-800 px-10 rounded-md text-white text-center py-5 mt-10 w-[300px]\">\r\n        Join Us\r\n      </Link>\r\n    </section>\r\n  )\r\n}", "import Footer from \"~/layout/anon/Footer\";\r\nimport Header from \"~/layout/anon/Header\";\r\nimport ListHighlight from \"~/layout/anon/ListHighlight\";\r\nimport SimpleHighlight from \"~/layout/anon/SimpleHighlight\";\r\nimport FieldsSection from \"~/layout/anon/common/FieldsSection\";\r\nimport ServicesSection from \"~/layout/anon/common/ServicesSection\";\r\nimport HeroSection from \"~/layout/anon/solver/HeroSection\";\r\n\r\nexport default function SeekerPage() {\r\n  return (\r\n    <div className=\"p-10\">\r\n      <HeroSection />\r\n      <SimpleHighlight\r\n        className=\"mt-20\"\r\n        title=\"How are we different?\"\r\n        description=\"With Bio-Solver you would not have to apply for jobs. We will screen your selected skills and assign points for each and add that to our database. We will use a skill-match algorithm to connect you with remote freelancing projects.\" />\r\n      <SimpleHighlight\r\n        className=\"mt-10\"\r\n        title=\"Who can be a Solver?\"\r\n        description=\"Anyone, anywhere who is a Biotech/Pharma expert/student who can help others solve their problems through remote freelance work.\" />\r\n      <ListHighlight\r\n        className=\"mt-10\"\r\n        title=\"How to be a Solver?\"\r\n        bullets={[\r\n          \"Apply to us online to be a Solver.\",\r\n          \"Fill in the application form and upload all necessary documents.\",\r\n          \"Choose the job types that you are interested in.\",\r\n          \"Choose your field and skills.\",\r\n          \"Set your own hourly rate.\",\r\n          \"Participate in our screening process which may include technical assessments, interviews, or demo projects.\",\r\n          \"Once your screening is done you will be provided with scores for each skill set.\",\r\n          \"Once a posted project matches your skill set, we would notify you to apply for it.\",\r\n          \"If you like the project, you can apply with a single click.\",\r\n          \"If you are selected for the project, you can begin work on a remote basis.\"\r\n        ]} />\r\n      <SimpleHighlight\r\n        className=\"mt-10\"\r\n        title=\"What is our commission?\"\r\n        description=\"We charge you commission each time you finish a project, our base commission rate starts at 20% and goes down as your earning goes higher monthly.\" />\r\n      <ServicesSection />\r\n      <FieldsSection />\r\n    </div>\r\n  )\r\n}", "import { Link } from \"@remix-run/react\";\r\n\r\nexport default function HeroSection() {\r\n  return (\r\n    <section className=\"flex flex-col w-full max-w-3xl h-auto mx-auto mt-10 items-center\">\r\n      <div className=\"text-center text-6xl font-semibold\">\r\n        Find work from anywhere, anytime.\r\n      </div>\r\n      <Link to=\"/register\" className=\"bg-purple-600 hover:bg-purple-800 px-10 rounded-md text-white text-center py-5 mt-10 w-[300px]\">\r\n        Join Us\r\n      </Link>\r\n    </section>\r\n  )\r\n}", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n};\n", "import { BuildingOffice2Icon, EnvelopeIcon } from \"@heroicons/react/24/outline\";\r\n\r\nexport default function ContactUsPage() {\r\n  return (\r\n    <div className=\"relative isolate bg-white\">\r\n      <div className=\"mx-auto grid max-w-7xl grid-cols-1 lg:grid-cols-2\">\r\n        <div className=\"relative p-10 lg:static\">\r\n          <div className=\"mx-auto max-w-xl lg:mx-0 lg:max-w-lg\">\r\n            <h2 className=\"text-3xl font-bold tracking-tight text-gray-900\">Get in touch</h2>\r\n            <p className=\"mt-6 text-lg leading-8 text-gray-600\">\r\n              Please don't hesitate to reach out to us with any queries, requirements, and feedback.\r\n            </p>\r\n            <dl className=\"mt-10 space-y-4 text-base leading-7 text-gray-600\">\r\n              <div className=\"flex gap-x-4\">\r\n                <dt className=\"flex-none\">\r\n                  <span className=\"sr-only\">Address</span>\r\n                  <BuildingOffice2Icon className=\"h-7 w-6 text-gray-400\" aria-hidden=\"true\" />\r\n                </dt>\r\n                <dd>\r\n                  Toronto, ON\r\n                  <br />\r\n                  Canada\r\n                </dd>\r\n              </div>\r\n              {/* <div className=\"flex gap-x-4\">\r\n                  <dt className=\"flex-none\">\r\n                    <span className=\"sr-only\">Telephone</span>\r\n                    <PhoneIcon className=\"h-7 w-6 text-gray-400\" aria-hidden=\"true\" />\r\n                  </dt>\r\n                  <dd>\r\n                    <a className=\"hover:text-gray-900\" href=\"tel:+1 (555) 234-5678\">\r\n                      +1 (555) 234-5678\r\n                    </a>\r\n                  </dd>\r\n                </div> */}\r\n              <div className=\"flex gap-x-4\">\r\n                <dt className=\"flex-none\">\r\n                  <span className=\"sr-only\">Email</span>\r\n                  <EnvelopeIcon className=\"h-7 w-6 text-gray-400\" aria-hidden=\"true\" />\r\n                </dt>\r\n                <dd>\r\n                  <a className=\"hover:text-gray-900\" href=\"mailto:info@biosolver.io\">\r\n                    info@biosolver.io\r\n                  </a>\r\n                </dd>\r\n              </div>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n        <form action=\"https://app.formzillion.com/f/ZPzOl-j5\" method=\"POST\" className=\"p-10\">\r\n          <div className=\"mx-auto max-w-xl lg:mr-0 lg:max-w-lg\">\r\n            <div className=\"grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2\">\r\n              <div>\r\n                <label htmlFor=\"first-name\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                  First name\r\n                </label>\r\n                <div className=\"mt-2.5\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"first-name\"\r\n                    id=\"first-name\"\r\n                    autoComplete=\"given-name\"\r\n                    className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"last-name\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                  Last name\r\n                </label>\r\n                <div className=\"mt-2.5\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"last-name\"\r\n                    id=\"last-name\"\r\n                    autoComplete=\"family-name\"\r\n                    className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"sm:col-span-2\">\r\n                <label htmlFor=\"email\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                  Email\r\n                </label>\r\n                <div className=\"mt-2.5\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    autoComplete=\"email\"\r\n                    className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"sm:col-span-2\">\r\n                <label htmlFor=\"phone-number\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                  Phone number\r\n                </label>\r\n                <div className=\"mt-2.5\">\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phone-number\"\r\n                    id=\"phone-number\"\r\n                    autoComplete=\"tel\"\r\n                    className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"sm:col-span-2\">\r\n                <label htmlFor=\"message\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\r\n                  Message\r\n                </label>\r\n                <div className=\"mt-2.5\">\r\n                  <textarea\r\n                    name=\"message\"\r\n                    id=\"message\"\r\n                    rows={4}\r\n                    className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm sm:leading-6\"\r\n                    defaultValue={''}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-8 flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"rounded-md bg-purple-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600\"\r\n              >\r\n                Send message\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}", "import { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { getNoteListItems } from \"~/models/note.server\";\r\nimport { getUserById } from \"~/models/user.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request);\r\n  const user = await getUserById(userId);\r\n  return json({ user });\r\n};\r\n\r\nexport default function Dashboard() {\r\n  const loaderData = useLoaderData<typeof loader>();\r\n  const { user } = loaderData;\r\n  const profileStrength = 'Incomplete';\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      <div className=\"w-3/4\">\r\n        <h2 className=\"text-3xl text-gray-600\">\r\n          Welcome back{\", \" + user?.fullName}\r\n        </h2>\r\n        <div className=\"mt-5 w-full flow-root p-5 bordered border-[1px] rounded-sm border-gray-200\">\r\n          <div className=\"float-left\">\r\n            Profile Strength: <span className=\"text-purple-600\">{profileStrength}</span>\r\n            <div className=\"text-purple-600\">Please complete your talent profile to enable all the features\r\n            </div>\r\n          </div>\r\n          <Link to=\"/profile\" className=\"float-right px-5 py-2 bg-purple-600 text-white rounded-sm hover:bg-purple-800\">Edit Profile</Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-1/4\"> Right</div>\r\n    </div>\r\n  )\r\n}", "export default function DocumentsPage() {\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      Work in Progress\r\n    </div>\r\n  )\r\n}", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { body: null, title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { body: \"Body is required\", title: null } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ body, title, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = useRef<HTMLInputElement>(null);\n  const bodyRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title ? (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        ) : null}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 px-3 py-2 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body ? (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "export default function CalendarPage() {\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      Work in Progress\r\n    </div>\r\n  )\r\n}", "export default function MessagesPage() {\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      Work in Progress\r\n    </div>\r\n  )\r\n}", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { create } from \"domain\";\nimport { useEffect, useRef } from \"react\";\nimport { FaGoogle, FaLinkedin } from \"react-icons/fa\";\nimport logoPng from \"~/assets/images/logos/base.png\";\n\nimport { createUser, getUserByEmail, updateUserById } from \"~/models/user.server\";\nimport { createRoles } from \"~/models/userRole.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/dashboard\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  console.log(formData)\n  const fullName = formData.get(\"fullName\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const roles = formData.getAll(\"roles\");\n  const referralCode = formData.get(\"referralCode\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/dashboard\");\n\n  console.log(email, password, roles)\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(fullName as string, email, password);\n  if (referralCode && typeof referralCode === 'string') {\n    await updateUserById(user.id, { source: referralCode, sourceType: 'referral' })\n  }\n  await createRoles(user.id, roles.map((role) => role.toString()));\n\n  return createUserSession({\n    redirectTo,\n    remember: false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Register() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const fullNameRef = useRef<HTMLInputElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const referralCodeRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <>\n      <div className=\"flex min-h-full flex-1 justify-center\">\n        <div className=\"flex flex-1 flex-col justify-center px-4 py-12 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n          <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n            <div className='w-full items-center text-center'>\n              <Link to=\"/\" className=\"items-center\" >\n                <img className=\"h-16 w-16 mx-auto\" src={logoPng} alt=\"BioSolver Logo\" />\n              </Link>\n              <h2 className=\"mt-8 text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n                Create your account\n              </h2>\n              <p className=\"mt-2 text-sm leading-6 text-gray-500\">\n                Already a member?{' '}\n                <Link to=\"/login\" className=\"font-semibold text-purple-600 hover:text-purple-500\">\n                  Sign In\n                </Link>\n              </p>\n            </div>\n\n            <div className=\"mt-10\">\n              <div>\n                <Form method=\"post\" className=\"space-y-6\">\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Full Name\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={fullNameRef}\n                        id=\"fullName\"\n                        required\n                        autoFocus={true}\n                        name=\"fullName\"\n                        type=\"text\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n\n                    </div>\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Email address\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={emailRef}\n                        id=\"email\"\n                        required\n                        autoFocus={true}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        aria-invalid={actionData?.errors?.email ? true : undefined}\n                        aria-describedby=\"email-error\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                      {actionData?.errors?.email ? (\n                        <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                          {actionData.errors.email}\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n\n                  <div>\n                    <label\n                      htmlFor=\"password\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Password\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        id=\"password\"\n                        ref={passwordRef}\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"new-password\"\n                        aria-invalid={actionData?.errors?.password ? true : undefined}\n                        aria-describedby=\"password-error\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                      {actionData?.errors?.password ? (\n                        <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                          {actionData.errors.password}\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n\n                  <fieldset>\n                    <legend>Roles</legend>\n                    <div className=\"space-y-5\">\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-solver\"\n                            aria-describedby=\"role-solver-description\"\n                            name=\"roles\"\n                            value=\"solver\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-solver\" className=\"font-medium text-gray-900\">\n                            Solver\n                          </label>\n                          <p id=\"role-solver-description\" className=\"text-gray-500\">\n                            I am an expert/student looking for work.\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-seeker\"\n                            aria-describedby=\"role-seeker-description\"\n                            name=\"roles\"\n                            value=\"seeker\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-seeker\" className=\"font-medium text-gray-900\">\n                            Seeker\n                          </label>\n                          <p id=\"role-seeker-description\" className=\"text-gray-500\">\n                            I am looking to hire a Freelancer.\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"relative flex items-start\">\n                        <div className=\"flex h-6 items-center\">\n                          <input\n                            id=\"role-referrer\"\n                            aria-describedby=\"role-referrer-description\"\n                            name=\"roles\"\n                            value=\"referrer\"\n                            type=\"checkbox\"\n                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm leading-6\">\n                          <label htmlFor=\"role-referrer\" className=\"font-medium text-gray-900\">\n                            Referral Partner\n                          </label>\n                          <p id=\"role-referrer-description\" className=\"text-gray-500\">\n                            I can spread the word.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n\n                  <div>\n                    <label\n                      htmlFor=\"referralCode\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Referral Code (optional)\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        ref={referralCodeRef}\n                        id=\"referralCode\"\n                        autoFocus={true}\n                        name=\"referralCode\"\n                        className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                      />\n                    </div>\n                  </div>\n\n                  <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n                  <button\n                    type=\"submit\"\n                    className=\"w-full rounded bg-purple-500 px-4 py-2 text-white hover:bg-purple-600 focus:bg-purple-400\"\n                  >\n                    Create Account\n                  </button>\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"text-center text-sm text-gray-500\">\n                      Already have an account?{\" \"}\n                      <Link\n                        className=\"text-purple-500 underline\"\n                        to={{\n                          pathname: \"/login\",\n                          search: searchParams.toString(),\n                        }}\n                      >\n                        Log in\n                      </Link>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n\n              {/* <div className=\"mt-10\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n                    <div className=\"w-full border-t border-gray-200\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-sm font-medium leading-6\">\n                    <span className=\"bg-white px-6 text-gray-900\">Or continue with</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 grid grid-cols-2 gap-4\">\n                  <a\n                    href=\"#\"\n                    className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-1.5 text-black bordered border-2 border-black\"\n                  >\n                    <FaGoogle className=\"h-5 w-5\" />\n                    <span className=\"text-sm font-semibold leading-6\">Google</span>\n                  </a>\n\n                  <a\n                    href=\"#\"\n                    className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-1.5 text-black bordered border-2 border-black\"\n                  >\n                    <FaLinkedin className=\"h-5 w-5\" />\n                    <span className=\"text-sm font-semibold leading-6\">LinkedIn</span>\n                  </a>\n                </div>\n              </div> */}\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import type { UserRole } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { User } from \"@prisma/client\";\r\n\r\nexport async function getRolesById(userId: UserRole[\"userId\"]) {\r\n  return prisma.userRole.findMany({ where: { userId } });\r\n}\r\n\r\nexport async function createRole(userId: UserRole[\"userId\"], role: string) {\r\n  return prisma.userRole.create({\r\n    data: {\r\n      role,\r\n      userId\r\n    },\r\n  });\r\n}\r\n\r\nexport async function createRoles(userId: UserRole[\"userId\"], roles: string[]) {\r\n  return prisma.userRole.createMany({\r\n    data: roles.map((role) => ({\r\n      role,\r\n      userId\r\n    }))    \r\n  });\r\n}\r\n", "const matchesCount = 5;\r\n\r\nexport default function Matches() {\r\n  return (\r\n    <div>\r\n      <h2>\r\n        You have {matchesCount} matches.\r\n      </h2>\r\n      <div>\r\n        List of matches here.\r\n      </div>\r\n    </div>\r\n  )\r\n}", "import { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { Link, Outlet, useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport { getDegrees } from \"~/models/degree.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { cx, useUser } from \"~/utils\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await requireUserId(request);\r\n  const degrees = await getDegrees({ userId });\r\n  return json({ degrees });\r\n};\r\n\r\nconst tabs = [\r\n  { name: 'Personal', href: 'personal', current: false },\r\n  { name: 'Education', href: 'education', current: false },\r\n  { name: 'Work', href: 'work', current: false },\r\n  { name: 'Skills', href: 'skills', current: true },\r\n]\r\n\r\ntype ProfileTab = 'Education' | 'Work' | 'Skills' | 'Personal'\r\n\r\nexport function Tabs({\r\n  selectedTab = 'Personal',\r\n  changeTab\r\n}: {\r\n  selectedTab: ProfileTab\r\n  changeTab: (tab: ProfileTab) => void\r\n}) {\r\n  return (\r\n    <div>\r\n      <div className=\"sm:hidden\">\r\n        <label htmlFor=\"tabs\" className=\"sr-only\">\r\n          Select a tab\r\n        </label>\r\n        {/* Use an \"onChange\" listener to redirect the user to the selected tab URL. */}\r\n        {tabs.map((tab) => (\r\n          <Link key={tab.name} to={tab.href} className=\"block p-4 text-xl text-blue-500\">\r\n            <div>\r\n              {tab.name}\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      <div className=\"hidden sm:block\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex w-full\" aria-label=\"Tabs\">\r\n            {tabs.map((tab) => (\r\n\r\n              <button\r\n                key={tab.name}\r\n                className={cx(\r\n                  tab.name === selectedTab\r\n                    ? 'border-indigo-500 text-indigo-600'\r\n                    : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700',\r\n                  'w-1/4 border-b-2 py-4 px-1 text-center text-sm font-medium'\r\n                )}\r\n                onClick={() => changeTab(tab.name as ProfileTab)}\r\n              >\r\n                {tab.name}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default function ProfilePage() {\r\n  const data = useLoaderData<typeof loader>();\r\n  const user = useUser();\r\n  const navigate = useNavigate()\r\n\r\n  const [currentTab, setCurrentTab] = useState<ProfileTab>('Personal')\r\n  const changeTab = (tab: ProfileTab) => {\r\n    setCurrentTab(tab)\r\n    navigate(`${tab.toLowerCase()}`)\r\n  }\r\n  return (\r\n    <div className=\"max-w-7xl w-full mx-auto\">\r\n      <Tabs selectedTab={currentTab} changeTab={changeTab} />\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}", "import type { User, Degree } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport function getDegrees({ userId }: { userId: User[\"id\"] }) {\r\n  return prisma.degree.findMany({\r\n    where: { userId },\r\n    orderBy: { updatedAt: \"desc\" },\r\n  });\r\n}\r\n\r\nexport function createDegree({\r\n  level,\r\n  field,\r\n  school,\r\n  country,\r\n  start,\r\n  end,\r\n  ongoing,\r\n  userId,\r\n}: Pick<Degree, \"level\" | \"field\" | \"school\" | \"country\" | \"start\" | \"end\" | \"ongoing\"> & { userId: User[\"id\"] }) {\r\n  return prisma.degree.create({\r\n    data: {\r\n      level,\r\n      field,\r\n      school,\r\n      country,\r\n      start,\r\n      end,\r\n      ongoing,      \r\n      user: {\r\n        connect: {\r\n          id: userId,\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteDegree({\r\n  id,\r\n  userId,\r\n}: Pick<Degree, \"id\"> & { userId: User[\"id\"] }) {\r\n  return prisma.degree.deleteMany({\r\n    where: { id, userId },\r\n  });\r\n}\r\n", "export default function ReportPage() {\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      Work in Progress\r\n    </div>\r\n  )\r\n}", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => logout(request);\n\nexport const loader = async () => redirect(\"/\");\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport CategoriesSection from \"~/layout/anon/home/CategorySection\";\nimport HeroSection from \"~/layout/anon/home/HeroSection\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Biosolver\" }];\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <div className=\"p-10\">\n      <HeroSection />      \n      <div className='w-full h-auto p-10 text-white rounded-lg mt-10 flex flex-row gap-5'>\n        <div className=\"w-full lg:w-1/2 bg-[url('assets/images/backgrounds/expert.jpg')] bg-cover bg-center\">\n          <div className='w-full h-full backdrop-brightness-50 p-10 flex flex-col'>\n            <h1 className='text-4xl font-bold'>Be a Solver</h1>\n            <p className='text-xl mt-5'>\n              Are you a Biotech/Pharma expert or student interested in remote freelancing work?\n            </p>\n            <Link to='/register' className=\"text-center w-full rounded bg-purple-500 hover:bg-purple-700 text-white py-5 mt-5\">Join as a Solver</Link>\n          </div>\n        </div>\n        <div className=\"w-full lg:w-1/2 bg-[url('assets/images/backgrounds/company.jpg')] bg-cover\">\n          <div className='w-full h-full backdrop-brightness-50 p-10 flex flex-col'>\n            <h1 className='text-4xl font-bold'>Hire a Solver</h1>\n            <p className='text-xl mt-5'>\n              Are you looking to hire a Biotech/Pharma expert or student for a remote freelancing work?\n            </p>\n            <Link to='/register' className=\"text-center w-full rounded bg-purple-500 hover:bg-purple-700 text-white py-5 mt-5\">Join as a Seeker</Link>\n          </div>\n        </div>\n      </div>\n      <CategoriesSection />\n      \n    </div>\n  );\n}\n", "import { cx } from \"~/utils\"\r\n\r\nexport default function GridTile({\r\n  className,\r\n  imgSrc,\r\n  imgAlt,\r\n  title,\r\n  description,\r\n  linkSrc,\r\n  linkText\r\n}: {\r\n  className?: string\r\n  imgSrc?: string\r\n  imgAlt?: string\r\n  title: string\r\n  description?: string\r\n  linkSrc?: string\r\n  linkText?: string\r\n}) {\r\n  return (\r\n    <div className={\r\n      cx(className, \"flex flex-col mx-auto justify-center items-center bg-white hover:border-2 hover:shadow-lg hover:scale-105 transition-all ease-in-out shadow-sm rounded-md hover:border-purple-500 hover:text-purple-500\")\r\n    }>\r\n      {\r\n        imgSrc && <img src={imgSrc} alt={imgAlt} className=\"w-16 h-auto mb-5\" />\r\n      }\r\n      <h3 className=\"font-bold text-xl\">{title}</h3>\r\n      <p>{description}</p>\r\n      <a href={linkSrc} className=\"mt-5\">{linkText}</a>\r\n    </div>\r\n  )\r\n}", "import consultingPng from \"~/assets/images/categories/consulting.png\"\r\nimport experimentationPng from \"~/assets/images/categories/experimentation.png\"\r\nimport analyticsReportingPng from \"~/assets/images/categories/analytics-reporting.png\"\r\nimport clinicalTrialPng from \"~/assets/images/categories/clinical-trial.png\"\r\nimport GridTile from \"../GridTile\"\r\n\r\nexport default function CategoriesSection() {\r\n  const categories = [\r\n    {\r\n      title: \"Solver Registration\",\r\n      image: consultingPng,\r\n      link: \"/technical-consulting\",\r\n      description: \"Solvers select job types, set hourly rates, and declare their top five hard skills. They submit academic and professional credentials, evidence of accomplishments, and any relevant work documentation.\"\r\n    },\r\n    {\r\n      title: \"Skill Identification\",\r\n      image: experimentationPng,\r\n      link: \"/experimental-troubleshooting\",\r\n      description: \"We meticulously evaluate the provided information to assess their authenticity and assign scores for each hard and soft skill by combining educational and professional achievements and technical assessments.\"\r\n    },\r\n    {\r\n      title: \"Project Submission\",\r\n      image: analyticsReportingPng,\r\n      link: \"/data-collection-and-analysis\",\r\n      description: \"Clients outline project specifics and set parameters like desired qualifications, experience level, and estimated hourly rate. Our AI further refines these inputs, identifying key hard and soft skills required for the project.\"\r\n    },\r\n    {\r\n      title: \"Skill Matching\",\r\n      image: clinicalTrialPng,\r\n      link: \"/clinical-trial-coordination\",\r\n      description: \"On project submission, our skill-matching algorithm shortlists the top suited Solvers. Clients are presented with this curated list, and upon selection, the project commences.\"\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <section className=\"flex flex-wrap w-full h-full mx-auto mt-40 justify-center items-center content-center\">\r\n      <div className=\"w-full h-auto\">\r\n        <h2 className=\"text-4xl text-center\">How it works</h2>\r\n        <p className=\"text-center\">Connect with our Seekers.</p>\r\n        <div className=\"flex justify-center flex-wrap mt-5 gap-2 max-w-7xl\">\r\n          {\r\n            categories.map((category, index) => (\r\n\r\n              <GridTile\r\n                key={index}\r\n                className=\"w-[500px] h-auto p-10\"\r\n                title={category.title}\r\n                imgSrc={category.image}\r\n                linkSrc={category.link}\r\n                description={category.description} />\r\n\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}", "import { Link } from \"@remix-run/react\";\r\nimport HeroDecoration from \"./HeroDecoration\";\r\nimport geneticEngineeringPng from \"~/assets/images/hero/genetic_engineering.png\";\r\n\r\nexport default function HeroSection() {\r\n  return (\r\n    <section className=\"flex flex-wrap w-full h-full mx-auto\">\r\n      <HeroDecoration />\r\n      <div className=\"w-full lg:w-1/2 flex flex-col\">\r\n        <div className=\"text-start text-4xl my-auto font-semibold\">\r\n          A global platform for remote freelancing work in Biotech & Pharma sectors\r\n        </div>\r\n        <Link to=\"/register\" className=\"bg-purple-600 hover:bg-purple-800 px-10 rounded-md text-white text-center py-5 mt-10 w-[300px]\">\r\n          Join Us\r\n        </Link>\r\n      </div>\r\n      <img className=\"w-full lg:w-1/2\" src={geneticEngineeringPng} alt=\"hero\" />\r\n    </section>\r\n  )\r\n}\r\n", "import heroCirclePng from \"~/assets/images/hero/hero-circle.png\"\r\nimport heroCircle2Png from \"~/assets/images/hero/hero-circle-2.png\"\r\nimport heroSquarePng from \"~/assets/images/hero/hero-square.png\"\r\nimport heroSquare2Png from \"~/assets/images/hero/hero-square-2.png\"\r\nimport heroDotPng from \"~/assets/images/hero/hero-dot.png\"\r\nimport heroTrianglePng from \"~/assets/images/hero/hero-triangle.png\"\r\n\r\nexport default function HeroDecoration() {\r\n  return (\r\n    <div className=\"-z-10\">\r\n      <img className=\"absolute right-[5%] top-[25%] opacity-10\" src={heroCirclePng} />\r\n      <img className=\"absolute right-[10%] top-[50%] animate-bounce \" src={heroCircle2Png} />\r\n      <img className=\"absolute left-[52%] bottom-[25%] animate-slide-x\" src={heroSquarePng} />\r\n      <img className=\"absolute left-1/2 top-1/2 animate-rotate-360\" src={heroSquare2Png} />\r\n      <img className=\"absolute left-[60%] top-1/4 animate-slide-y\" src={heroDotPng} />\r\n      <img className=\"absolute left-[5%] top-1/3 animate-rotate-360\" src={heroTrianglePng} />\r\n    </div>\r\n  )\r\n}", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport logoPng from '~/assets/images/logos/base.png';\nimport { FaGoogle, FaLinkedin } from 'react-icons/fa';\n\nimport { verifyLogin } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/dashboard\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/dashboard\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    redirectTo,\n    remember: remember === \"on\" ? true : false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/dashboard\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <>\n      <div className=\"flex min-h-full flex-col justify-center\">\n        <div className=\"mx-auto w-full max-w-md px-8\">\n          <Link to=\"/\" className=\"items-center\" >\n            <img className=\"h-16 w-16 mx-auto\" src={logoPng} alt=\"BioSolver Logo\" />\n          </Link>\n          <Form method=\"post\" className=\"space-y-6\">\n            <div>\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  ref={emailRef}\n                  id=\"email\"\n                  required\n                  autoFocus={true}\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  aria-invalid={actionData?.errors?.email ? true : undefined}\n                  aria-describedby=\"email-error\"\n                  className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                />\n                {actionData?.errors?.email ? (\n                  <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                    {actionData.errors.email}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Password\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"password\"\n                  ref={passwordRef}\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  aria-invalid={actionData?.errors?.password ? true : undefined}\n                  aria-describedby=\"password-error\"\n                  className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                />\n                {actionData?.errors?.password ? (\n                  <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                    {actionData.errors.password}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n            <button\n              type=\"submit\"\n              className=\"w-full rounded bg-purple-500 px-4 py-2 text-white hover:bg-purple-600 focus:bg-purple-400\"\n            >\n              Log in\n            </button>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember\"\n                  name=\"remember\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                />\n                <label\n                  htmlFor=\"remember\"\n                  className=\"ml-2 block text-sm text-gray-900\"\n                >\n                  Remember me\n                </label>\n              </div>\n              <div className=\"text-center text-sm text-gray-500\">\n                Don't have an account?{\" \"}\n                <Link\n                  className=\"text-purple-500 underline\"\n                  to={{\n                    pathname: \"/register\",\n                    search: searchParams.toString(),\n                  }}\n                >\n                  Sign up\n                </Link>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { getNoteListItems } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData<typeof loader>();\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 px-4 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-EP77SPMO.js','imports':['/build/_shared/chunk-YUUU2RAQ.js','/build/_shared/chunk-YYAXLAGZ.js','/build/_shared/chunk-HYDBX6IC.js','/build/_shared/chunk-IU43IUTG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ITY5QNF6.js','imports':['/build/_shared/chunk-JVNGUFS4.js','/build/_shared/chunk-JRQATJZP.js','/build/_shared/chunk-DZY5WEHX.js','/build/_shared/chunk-PI6H7ZJD.js','/build/_shared/chunk-KCLKX6RL.js','/build/_shared/chunk-WLTRNBV5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-N7AIAAEP.js','imports':['/build/_shared/chunk-463C22YY.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/calendar':{'id':'routes/calendar','parentId':'root','path':'calendar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/calendar-2HT3ZEXN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/contact-us':{'id':'routes/contact-us','parentId':'root','path':'contact-us','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-us-TPYK572Q.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-62PCOQYT.js','imports':['/build/_shared/chunk-CMWXK6I4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/documents':{'id':'routes/documents','parentId':'root','path':'documents','index':undefined,'caseSensitive':undefined,'module':'/build/routes/documents-DDZFG3ZZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/for-seekers':{'id':'routes/for-seekers','parentId':'root','path':'for-seekers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/for-seekers-442M3IG5.js','imports':['/build/_shared/chunk-LZ74P7GG.js','/build/_shared/chunk-463C22YY.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/for-solvers':{'id':'routes/for-solvers','parentId':'root','path':'for-solvers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/for-solvers-S2LZFWOX.js','imports':['/build/_shared/chunk-LZ74P7GG.js','/build/_shared/chunk-463C22YY.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-JO7RAI4L.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-LTGI3AYO.js','imports':['/build/_shared/chunk-463C22YY.js','/build/_shared/chunk-CMWXK6I4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-S5LWYBEX.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/matches':{'id':'routes/matches','parentId':'root','path':'matches','index':undefined,'caseSensitive':undefined,'module':'/build/routes/matches-3FDE2QYX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/messages':{'id':'routes/messages','parentId':'root','path':'messages','index':undefined,'caseSensitive':undefined,'module':'/build/routes/messages-H3Y2ROQT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-PGUHZGDO.js','imports':['/build/_shared/chunk-463C22YY.js','/build/_shared/chunk-OLP4QJ4K.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.$noteId':{'id':'routes/notes.$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.$noteId-CSLD5S5N.js','imports':['/build/_shared/chunk-WLTRNBV5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/notes._index':{'id':'routes/notes._index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes._index-XD4RRL7B.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes.new':{'id':'routes/notes.new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes.new-MOYLCMXS.js','imports':['/build/_shared/chunk-WLTRNBV5.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/privacy-policy':{'id':'routes/privacy-policy','parentId':'root','path':'privacy-policy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/privacy-policy-WGH2JNOP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile':{'id':'routes/profile','parentId':'root','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile-BRGSPKCW.js','imports':['/build/_shared/chunk-463C22YY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile._index':{'id':'routes/profile._index','parentId':'routes/profile','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/profile._index-WDOTFDLH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.degrees':{'id':'routes/profile.degrees','parentId':'routes/profile','path':'degrees','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.degrees-E7BEC6JP.js','imports':['/build/_shared/chunk-3NSWF6JJ.js','/build/_shared/chunk-YL3FPXEX.js','/build/_shared/chunk-PI6H7ZJD.js','/build/_shared/chunk-KCLKX6RL.js','/build/_shared/chunk-PZDCJNDP.js','/build/_shared/chunk-WLTRNBV5.js','/build/_shared/chunk-X7FIYIPL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.degrees.$degreeId':{'id':'routes/profile.degrees.$degreeId','parentId':'routes/profile.degrees','path':':degreeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.degrees.$degreeId-G3IIRMZP.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.education':{'id':'routes/profile.education','parentId':'routes/profile','path':'education','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.education-MNHDCLFD.js','imports':['/build/_shared/chunk-HTDZCSOQ.js','/build/_shared/chunk-X7FIYIPL.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.education.back':{'id':'routes/profile.education.back','parentId':'routes/profile.education','path':'back','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.education.back-OCXQ2X6B.js','imports':['/build/_shared/chunk-PZDCJNDP.js','/build/_shared/chunk-WLTRNBV5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.education.degree.new':{'id':'routes/profile.education.degree.new','parentId':'routes/profile.education','path':'degree/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.education.degree.new-ZQUWQTBH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.personal':{'id':'routes/profile.personal','parentId':'routes/profile','path':'personal','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.personal-YJP6Q2AQ.js','imports':['/build/_shared/chunk-HTDZCSOQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.professional':{'id':'routes/profile.professional','parentId':'routes/profile','path':'professional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.professional-SHQ2CZEG.js','imports':['/build/_shared/chunk-3NSWF6JJ.js','/build/_shared/chunk-YL3FPXEX.js','/build/_shared/chunk-PI6H7ZJD.js','/build/_shared/chunk-KCLKX6RL.js','/build/_shared/chunk-PZDCJNDP.js','/build/_shared/chunk-WLTRNBV5.js','/build/_shared/chunk-X7FIYIPL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.single':{'id':'routes/profile.single','parentId':'routes/profile','path':'single','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.single-AF43UFUQ.js','imports':['/build/_shared/chunk-OLP4QJ4K.js','/build/_shared/chunk-YL3FPXEX.js','/build/_shared/chunk-WLTRNBV5.js','/build/_shared/chunk-X7FIYIPL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.skills':{'id':'routes/profile.skills','parentId':'routes/profile','path':'skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.skills-TCRBEE2W.js','imports':['/build/_shared/chunk-HTDZCSOQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile.work':{'id':'routes/profile.work','parentId':'routes/profile','path':'work','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile.work-C6GWEFUD.js','imports':['/build/_shared/chunk-JRQATJZP.js','/build/_shared/chunk-KCLKX6RL.js','/build/_shared/chunk-HTDZCSOQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-GVVWPGRU.js','imports':['/build/_shared/chunk-463C22YY.js','/build/_shared/chunk-CMWXK6I4.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reports':{'id':'routes/reports','parentId':'root','path':'reports','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reports-XNV3LFFP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/seeker.dashboard':{'id':'routes/seeker.dashboard','parentId':'root','path':'seeker/dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/seeker.dashboard-67273DVE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/terms-and-conditions':{'id':'routes/terms-and-conditions','parentId':'root','path':'terms-and-conditions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/terms-and-conditions-QKWGD4G5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'73b1f309','hmr':undefined,'url':'/build/manifest-73B1F309.js'};"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_node", "import_react", "import_node", "bcrypt", "bcrypt", "invariant", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_outline", "import_jsx_dev_runtime", "navigation", "navigation", "import_node", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "fields", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "action", "loader", "_a", "import_jsx_dev_runtime", "action", "import_node", "import_remix_forms", "import_react", "Form", "FrameworkForm", "import_react", "import_jsx_dev_runtime", "action", "Form", "Errors", "import_react_hook_form", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "EducationDegrees", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "action", "loader", "EducationDegrees", "_a", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "import_react_hook_form", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "import_react", "import_jsx_dev_runtime", "import_react", "import_react_hook_form", "import_react", "import_solid", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "domain", "import_react", "route", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "SeekerPage", "import_react", "import_jsx_dev_runtime", "HeroSection", "import_jsx_dev_runtime", "SeekerPage", "HeroSection", "loader", "loader", "import_outline", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "action", "import_node", "import_react", "import_jsx_dev_runtime", "action", "_a", "_b", "_c", "_d", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "_a", "_b", "_c", "_d", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "action", "loader", "import_node", "action", "loader", "meta", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "HeroSection", "import_jsx_dev_runtime", "meta", "HeroSection", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader"]
}
